// -*- tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
// vi: set et ts=4 sw=2 sts=2:

/*
 * This file is autogenerated using generate_lut.py
 *
 * Don't edit this file!
 */

#include "marchinglut.hh"

extern "C" {

  const short table_cube3d_cases_offsets[][5] = {
    /* vv: vertex values with 0=in, 1=out
     * cn: case number
     * bc: basic case, if negative it's inverted
     * c1: element count of co-dimension 1 elements
     * o1: table offset for co-dimension 1
     * c0: element count of co-dimension 0 elements
     * o0: table offset for co-dimension 0
     * uniq: whether the case is ambiguous for MC33 */
    /* vv / cn / bc / c0, o0, c1, o1, uniq */
    /* (0, 0, 0, 0, 0, 0, 0, 0) / 0 */ {0, 1, 0, 0, 0},
    /* (1, 0, 0, 0, 0, 0, 0, 0) / 1 */ {9, 3, 0, 1, 0},
    /* (0, 1, 0, 0, 0, 0, 0, 0) / -1 */ {30, 3, 4, 1, 2},
    /* (1, 1, 0, 0, 0, 0, 0, 0) / 2 */ {51, 2, 8, 1, 0},
    /* (0, 0, 1, 0, 0, 0, 0, 0) / -1 */ {67, 3, 13, 1, 2},
    /* (1, 0, 1, 0, 0, 0, 0, 0) / -2 */ {88, 2, 17, 1, 2},
    /* (0, 1, 1, 0, 0, 0, 0, 0) / 3 */ {104, 4, 22, 2, 1},
    /* (1, 1, 1, 0, 0, 0, 0, 0) / 5 */ {132, 3, 30, 2, 0},
    /* (0, 0, 0, 1, 0, 0, 0, 0) / 1 */ {153, 3, 39, 1, 0},
    /* (1, 0, 0, 1, 0, 0, 0, 0) / -3 */ {174, 4, 43, 2, 3},
    /* (0, 1, 0, 1, 0, 0, 0, 0) / 2 */ {202, 2, 51, 1, 0},
    /* (1, 1, 0, 1, 0, 0, 0, 0) / -5 */ {218, 3, 56, 2, 2},
    /* (0, 0, 1, 1, 0, 0, 0, 0) / 2 */ {239, 2, 65, 1, 0},
    /* (1, 0, 1, 1, 0, 0, 0, 0) / 5 */ {255, 3, 70, 2, 0},
    /* (0, 1, 1, 1, 0, 0, 0, 0) / -5 */ {276, 3, 79, 2, 2},
    /* (1, 1, 1, 1, 0, 0, 0, 0) / 8 */ {297, 1, 88, 1, 0},
    /* (0, 0, 0, 0, 1, 0, 0, 0) / 1 */ {306, 3, 93, 1, 0},
    /* (1, 0, 0, 0, 1, 0, 0, 0) / 2 */ {327, 2, 97, 1, 0},
    /* (0, 1, 0, 0, 1, 0, 0, 0) / 3 */ {343, 4, 102, 2, 1},
    /* (1, 1, 0, 0, 1, 0, 0, 0) / 5 */ {371, 3, 110, 2, 0},
    /* (0, 0, 1, 0, 1, 0, 0, 0) / -3 */ {392, 4, 119, 2, 3},
    /* (1, 0, 1, 0, 1, 0, 0, 0) / -5 */ {420, 3, 127, 2, 2},
    /* (0, 1, 1, 0, 1, 0, 0, 0) / 7 */ {441, 5, 136, 2, 0},
    /* (1, 1, 1, 0, 1, 0, 0, 0) / 9 */ {472, 3, 144, 2, 0},
    /* (0, 0, 0, 1, 1, 0, 0, 0) / 4 */ {493, 4, 154, 2, 0},
    /* (1, 0, 0, 1, 1, 0, 0, 0) / 6 */ {521, 4, 162, 2, 0},
    /* (0, 1, 0, 1, 1, 0, 0, 0) / -6 */ {548, 4, 171, 2, 2},
    /* (1, 1, 0, 1, 1, 0, 0, 0) / 11 */ {575, 5, 180, 4, 0},
    /* (0, 0, 1, 1, 1, 0, 0, 0) / -6 */ {603, 4, 196, 2, 2},
    /* (1, 0, 1, 1, 1, 0, 0, 0) / -11 */ {630, 5, 205, 4, 2},
    /* (0, 1, 1, 1, 1, 0, 0, 0) / 12 */ {658, 3, 221, 2, 0},
    /* (1, 1, 1, 1, 1, 0, 0, 0) / -5 */ {681, 2, 230, 2, 0},
    /* (0, 0, 0, 0, 0, 1, 0, 0) / 1 */ {695, 3, 239, 1, 0},
    /* (1, 0, 0, 0, 0, 1, 0, 0) / -3 */ {716, 4, 243, 2, 3},
    /* (0, 1, 0, 0, 0, 1, 0, 0) / -2 */ {744, 2, 251, 1, 2},
    /* (1, 1, 0, 0, 0, 1, 0, 0) / -5 */ {760, 3, 256, 2, 2},
    /* (0, 0, 1, 0, 0, 1, 0, 0) / 4 */ {781, 4, 265, 2, 0},
    /* (1, 0, 1, 0, 0, 1, 0, 0) / 6 */ {809, 4, 273, 2, 0},
    /* (0, 1, 1, 0, 0, 1, 0, 0) / -6 */ {836, 4, 282, 2, 2},
    /* (1, 1, 1, 0, 0, 1, 0, 0) / -11 */ {863, 5, 291, 4, 2},
    /* (0, 0, 0, 1, 0, 1, 0, 0) / -3 */ {891, 4, 307, 2, 3},
    /* (1, 0, 0, 1, 0, 1, 0, 0) / -7 */ {919, 5, 315, 2, 2},
    /* (0, 1, 0, 1, 0, 1, 0, 0) / -5 */ {950, 3, 323, 2, 2},
    /* (1, 1, 0, 1, 0, 1, 0, 0) / -9 */ {971, 3, 332, 2, 2},
    /* (0, 0, 1, 1, 0, 1, 0, 0) / 6 */ {992, 4, 342, 2, 0},
    /* (1, 0, 1, 1, 0, 1, 0, 0) / -12 */ {1019, 3, 351, 2, 2},
    /* (0, 1, 1, 1, 0, 1, 0, 0) / 11 */ {1042, 5, 360, 4, 0},
    /* (1, 1, 1, 1, 0, 1, 0, 0) / 5 */ {1070, 2, 376, 2, 2},
    /* (0, 0, 0, 0, 1, 1, 0, 0) / -2 */ {1084, 2, 385, 1, 2},
    /* (1, 0, 0, 0, 1, 1, 0, 0) / -5 */ {1100, 3, 390, 2, 2},
    /* (0, 1, 0, 0, 1, 1, 0, 0) / 5 */ {1121, 3, 399, 2, 0},
    /* (1, 1, 0, 0, 1, 1, 0, 0) / -8 */ {1142, 1, 408, 1, 2},
    /* (0, 0, 1, 0, 1, 1, 0, 0) / 6 */ {1151, 4, 413, 2, 0},
    /* (1, 0, 1, 0, 1, 1, 0, 0) / 11 */ {1178, 5, 422, 4, 0},
    /* (0, 1, 1, 0, 1, 1, 0, 0) / 12 */ {1206, 3, 438, 2, 0},
    /* (1, 1, 1, 0, 1, 1, 0, 0) / -5 */ {1229, 2, 447, 2, 0},
    /* (0, 0, 0, 1, 1, 1, 0, 0) / 6 */ {1243, 4, 456, 2, 0},
    /* (1, 0, 0, 1, 1, 1, 0, 0) / -12 */ {1270, 3, 465, 2, 2},
    /* (0, 1, 0, 1, 1, 1, 0, 0) / -11 */ {1293, 5, 474, 4, 2},
    /* (1, 1, 0, 1, 1, 1, 0, 0) / 5 */ {1321, 2, 490, 2, 2},
    /* (0, 0, 1, 1, 1, 1, 0, 0) / 10 */ {1335, 2, 499, 2, 0},
    /* (1, 0, 1, 1, 1, 1, 0, 0) / -6 */ {1353, 2, 509, 2, 0},
    /* (0, 1, 1, 1, 1, 1, 0, 0) / 6 */ {1365, 2, 518, 2, 2},
    /* (1, 1, 1, 1, 1, 1, 0, 0) / -2 */ {1377, 1, 527, 1, 0},
    /* (0, 0, 0, 0, 0, 0, 1, 0) / -1 */ {1384, 3, 532, 1, 2},
    /* (1, 0, 0, 0, 0, 0, 1, 0) / 3 */ {1405, 4, 536, 2, 1},
    /* (0, 1, 0, 0, 0, 0, 1, 0) / -4 */ {1433, 4, 544, 2, 2},
    /* (1, 1, 0, 0, 0, 0, 1, 0) / -6 */ {1461, 4, 552, 2, 2},
    /* (0, 0, 1, 0, 0, 0, 1, 0) / 2 */ {1488, 2, 561, 1, 0},
    /* (1, 0, 1, 0, 0, 0, 1, 0) / -5 */ {1504, 3, 566, 2, 2},
    /* (0, 1, 1, 0, 0, 0, 1, 0) / 6 */ {1525, 4, 575, 2, 0},
    /* (1, 1, 1, 0, 0, 0, 1, 0) / 11 */ {1552, 5, 584, 4, 0},
    /* (0, 0, 0, 1, 0, 0, 1, 0) / -3 */ {1580, 4, 600, 2, 3},
    /* (1, 0, 0, 1, 0, 0, 1, 0) / -7 */ {1608, 5, 608, 2, 2},
    /* (0, 1, 0, 1, 0, 0, 1, 0) / 6 */ {1639, 4, 616, 2, 0},
    /* (1, 1, 0, 1, 0, 0, 1, 0) / 12 */ {1666, 3, 625, 2, 0},
    /* (0, 0, 1, 1, 0, 0, 1, 0) / -5 */ {1689, 3, 634, 2, 2},
    /* (1, 0, 1, 1, 0, 0, 1, 0) / -9 */ {1710, 3, 643, 2, 2},
    /* (0, 1, 1, 1, 0, 0, 1, 0) / -11 */ {1731, 5, 653, 4, 2},
    /* (1, 1, 1, 1, 0, 0, 1, 0) / -5 */ {1759, 2, 669, 2, 0},
    /* (0, 0, 0, 0, 1, 0, 1, 0) / -2 */ {1773, 2, 678, 1, 2},
    /* (1, 0, 0, 0, 1, 0, 1, 0) / 5 */ {1789, 3, 683, 2, 0},
    /* (0, 1, 0, 0, 1, 0, 1, 0) / -6 */ {1810, 4, 692, 2, 2},
    /* (1, 1, 0, 0, 1, 0, 1, 0) / -11 */ {1837, 5, 701, 4, 2},
    /* (0, 0, 1, 0, 1, 0, 1, 0) / 5 */ {1865, 3, 717, 2, 0},
    /* (1, 0, 1, 0, 1, 0, 1, 0) / 8 */ {1886, 1, 726, 1, 0},
    /* (0, 1, 1, 0, 1, 0, 1, 0) / -12 */ {1895, 3, 731, 2, 2},
    /* (1, 1, 1, 0, 1, 0, 1, 0) / 5 */ {1918, 2, 740, 2, 2},
    /* (0, 0, 0, 1, 1, 0, 1, 0) / -6 */ {1932, 4, 749, 2, 2},
    /* (1, 0, 0, 1, 1, 0, 1, 0) / -12 */ {1959, 3, 758, 2, 2},
    /* (0, 1, 0, 1, 1, 0, 1, 0) / 10 */ {1982, 2, 767, 2, 0},
    /* (1, 1, 0, 1, 1, 0, 1, 0) / -6 */ {2000, 2, 777, 2, 0},
    /* (0, 0, 1, 1, 1, 0, 1, 0) / 11 */ {2012, 5, 786, 4, 0},
    /* (1, 0, 1, 1, 1, 0, 1, 0) / 5 */ {2040, 2, 802, 2, 2},
    /* (0, 1, 1, 1, 1, 0, 1, 0) / 6 */ {2054, 2, 811, 2, 2},
    /* (1, 1, 1, 1, 1, 0, 1, 0) / 2 */ {2066, 1, 820, 1, 2},
    /* (0, 0, 0, 0, 0, 1, 1, 0) / 3 */ {2073, 4, 825, 2, 1},
    /* (1, 0, 0, 0, 0, 1, 1, 0) / 7 */ {2101, 5, 833, 2, 0},
    /* (0, 1, 0, 0, 0, 1, 1, 0) / -6 */ {2132, 4, 841, 2, 2},
    /* (1, 1, 0, 0, 0, 1, 1, 0) / -12 */ {2159, 3, 850, 2, 2},
    /* (0, 0, 1, 0, 0, 1, 1, 0) / -6 */ {2182, 4, 859, 2, 2},
    /* (1, 0, 1, 0, 0, 1, 1, 0) / 12 */ {2209, 3, 868, 2, 0},
    /* (0, 1, 1, 0, 0, 1, 1, 0) / 10 */ {2232, 2, 877, 2, 0},
    /* (1, 1, 1, 0, 0, 1, 1, 0) / -6 */ {2250, 2, 887, 2, 0},
    /* (0, 0, 0, 1, 0, 1, 1, 0) / -7 */ {2262, 5, 896, 2, 2},
    /* (1, 0, 0, 1, 0, 1, 1, 0) / 13 */ {2293, 5, 904, 4, 0},
    /* (0, 1, 0, 1, 0, 1, 1, 0) / -12 */ {2330, 3, 920, 2, 2},
    /* (1, 1, 0, 1, 0, 1, 1, 0) / -7 */ {2353, 3, 929, 3, 0},
    /* (0, 0, 1, 1, 0, 1, 1, 0) / -12 */ {2368, 3, 941, 2, 2},
    /* (1, 0, 1, 1, 0, 1, 1, 0) / -7 */ {2391, 3, 950, 3, 0},
    /* (0, 1, 1, 1, 0, 1, 1, 0) / -6 */ {2406, 2, 962, 2, 0},
    /* (1, 1, 1, 1, 0, 1, 1, 0) / 18 */ {2418, 2, 971, 2, 1},
    /* (0, 0, 0, 0, 1, 1, 1, 0) / -5 */ {2428, 3, 979, 2, 2},
    /* (1, 0, 0, 0, 1, 1, 1, 0) / 9 */ {2449, 3, 988, 2, 0},
    /* (0, 1, 0, 0, 1, 1, 1, 0) / 11 */ {2470, 5, 998, 4, 0},
    /* (1, 1, 0, 0, 1, 1, 1, 0) / 5 */ {2498, 2, 1014, 2, 2},
    /* (0, 0, 1, 0, 1, 1, 1, 0) / -11 */ {2512, 5, 1023, 4, 2},
    /* (1, 0, 1, 0, 1, 1, 1, 0) / -5 */ {2540, 2, 1039, 2, 0},
    /* (0, 1, 1, 0, 1, 1, 1, 0) / -6 */ {2554, 2, 1048, 2, 0},
    /* (1, 1, 1, 0, 1, 1, 1, 0) / -2 */ {2566, 1, 1057, 1, 0},
    /* (0, 0, 0, 1, 1, 1, 1, 0) / 12 */ {2573, 3, 1062, 2, 0},
    /* (1, 0, 0, 1, 1, 1, 1, 0) / 7 */ {2596, 3, 1071, 3, 2},
    /* (0, 1, 0, 1, 1, 1, 1, 0) / -6 */ {2611, 2, 1083, 2, 0},
    /* (1, 1, 0, 1, 1, 1, 1, 0) / 18 */ {2623, 2, 1092, 2, 1},
    /* (0, 0, 1, 1, 1, 1, 1, 0) / 6 */ {2633, 2, 1100, 2, 2},
    /* (1, 0, 1, 1, 1, 1, 1, 0) / -18 */ {2645, 2, 1109, 2, 3},
    /* (0, 1, 1, 1, 1, 1, 1, 0) / 19 */ {2655, 2, 1117, 2, 0},
    /* (1, 1, 1, 1, 1, 1, 1, 0) / -1 */ {2665, 1, 1125, 1, 0},
    /* (0, 0, 0, 0, 0, 0, 0, 1) / -1 */ {2670, 3, 1129, 1, 2},
    /* (1, 0, 0, 0, 0, 0, 0, 1) / -4 */ {2691, 4, 1133, 2, 2},
    /* (0, 1, 0, 0, 0, 0, 0, 1) / 3 */ {2719, 4, 1141, 2, 1},
    /* (1, 1, 0, 0, 0, 0, 0, 1) / -6 */ {2747, 4, 1149, 2, 2},
    /* (0, 0, 1, 0, 0, 0, 0, 1) / -3 */ {2774, 4, 1158, 2, 3},
    /* (1, 0, 1, 0, 0, 0, 0, 1) / -6 */ {2802, 4, 1166, 2, 2},
    /* (0, 1, 1, 0, 0, 0, 0, 1) / 7 */ {2829, 5, 1175, 2, 0},
    /* (1, 1, 1, 0, 0, 0, 0, 1) / -12 */ {2860, 3, 1183, 2, 2},
    /* (0, 0, 0, 1, 0, 0, 0, 1) / 2 */ {2883, 2, 1192, 1, 0},
    /* (1, 0, 0, 1, 0, 0, 0, 1) / -6 */ {2899, 4, 1197, 2, 2},
    /* (0, 1, 0, 1, 0, 0, 0, 1) / 5 */ {2926, 3, 1206, 2, 0},
    /* (1, 1, 0, 1, 0, 0, 0, 1) / -11 */ {2947, 5, 1215, 4, 2},
    /* (0, 0, 1, 1, 0, 0, 0, 1) / 5 */ {2975, 3, 1231, 2, 0},
    /* (1, 0, 1, 1, 0, 0, 0, 1) / 11 */ {2996, 5, 1240, 4, 0},
    /* (0, 1, 1, 1, 0, 0, 0, 1) / 9 */ {3024, 3, 1256, 2, 0},
    /* (1, 1, 1, 1, 0, 0, 0, 1) / 5 */ {3045, 2, 1266, 2, 2},
    /* (0, 0, 0, 0, 1, 0, 0, 1) / -3 */ {3059, 4, 1275, 2, 3},
    /* (1, 0, 0, 0, 1, 0, 0, 1) / -6 */ {3087, 4, 1283, 2, 2},
    /* (0, 1, 0, 0, 1, 0, 0, 1) / 7 */ {3114, 5, 1292, 2, 0},
    /* (1, 1, 0, 0, 1, 0, 0, 1) / 12 */ {3145, 3, 1300, 2, 0},
    /* (0, 0, 1, 0, 1, 0, 0, 1) / -7 */ {3168, 5, 1309, 2, 2},
    /* (1, 0, 1, 0, 1, 0, 0, 1) / 12 */ {3199, 3, 1317, 2, 0},
    /* (0, 1, 1, 0, 1, 0, 0, 1) / -13 */ {3222, 5, 1326, 4, 2},
    /* (1, 1, 1, 0, 1, 0, 0, 1) / -7 */ {3259, 3, 1342, 3, 0},
    /* (0, 0, 0, 1, 1, 0, 0, 1) / 6 */ {3274, 4, 1354, 2, 0},
    /* (1, 0, 0, 1, 1, 0, 0, 1) / -10 */ {3301, 2, 1363, 2, 2},
    /* (0, 1, 0, 1, 1, 0, 0, 1) / 12 */ {3319, 3, 1373, 2, 0},
    /* (1, 1, 0, 1, 1, 0, 0, 1) / 6 */ {3342, 2, 1382, 2, 2},
    /* (0, 0, 1, 1, 1, 0, 0, 1) / -12 */ {3354, 3, 1391, 2, 2},
    /* (1, 0, 1, 1, 1, 0, 0, 1) / -6 */ {3377, 2, 1400, 2, 0},
    /* (0, 1, 1, 1, 1, 0, 0, 1) / 7 */ {3389, 3, 1409, 3, 2},
    /* (1, 1, 1, 1, 1, 0, 0, 1) / -18 */ {3404, 2, 1421, 2, 3},
    /* (0, 0, 0, 0, 0, 1, 0, 1) / 2 */ {3414, 2, 1429, 1, 0},
    /* (1, 0, 0, 0, 0, 1, 0, 1) / 6 */ {3430, 4, 1434, 2, 0},
    /* (0, 1, 0, 0, 0, 1, 0, 1) / 5 */ {3457, 3, 1443, 2, 0},
    /* (1, 1, 0, 0, 0, 1, 0, 1) / 11 */ {3478, 5, 1452, 4, 0},
    /* (0, 0, 1, 0, 0, 1, 0, 1) / -6 */ {3506, 4, 1468, 2, 2},
    /* (1, 0, 1, 0, 0, 1, 0, 1) / 10 */ {3533, 2, 1477, 2, 0},
    /* (0, 1, 1, 0, 0, 1, 0, 1) / 12 */ {3551, 3, 1487, 2, 0},
    /* (1, 1, 1, 0, 0, 1, 0, 1) / 6 */ {3574, 2, 1496, 2, 2},
    /* (0, 0, 0, 1, 0, 1, 0, 1) / -5 */ {3586, 3, 1505, 2, 2},
    /* (1, 0, 0, 1, 0, 1, 0, 1) / -12 */ {3607, 3, 1514, 2, 2},
    /* (0, 1, 0, 1, 0, 1, 0, 1) / 8 */ {3630, 1, 1523, 1, 0},
    /* (1, 1, 0, 1, 0, 1, 0, 1) / 5 */ {3639, 2, 1528, 2, 2},
    /* (0, 0, 1, 1, 0, 1, 0, 1) / -11 */ {3653, 5, 1537, 4, 2},
    /* (1, 0, 1, 1, 0, 1, 0, 1) / -6 */ {3681, 2, 1553, 2, 0},
    /* (0, 1, 1, 1, 0, 1, 0, 1) / -5 */ {3693, 2, 1562, 2, 0},
    /* (1, 1, 1, 1, 0, 1, 0, 1) / -2 */ {3707, 1, 1571, 1, 0},
    /* (0, 0, 0, 0, 1, 1, 0, 1) / -5 */ {3714, 3, 1576, 2, 2},
    /* (1, 0, 0, 0, 1, 1, 0, 1) / -11 */ {3735, 5, 1585, 4, 2},
    /* (0, 1, 0, 0, 1, 1, 0, 1) / 9 */ {3763, 3, 1601, 2, 0},
    /* (1, 1, 0, 0, 1, 1, 0, 1) / -5 */ {3784, 2, 1611, 2, 0},
    /* (0, 0, 1, 0, 1, 1, 0, 1) / -12 */ {3798, 3, 1620, 2, 2},
    /* (1, 0, 1, 0, 1, 1, 0, 1) / 6 */ {3821, 2, 1629, 2, 2},
    /* (0, 1, 1, 0, 1, 1, 0, 1) / 7 */ {3833, 3, 1638, 3, 2},
    /* (1, 1, 1, 0, 1, 1, 0, 1) / -18 */ {3848, 2, 1650, 2, 3},
    /* (0, 0, 0, 1, 1, 1, 0, 1) / 11 */ {3858, 5, 1658, 4, 0},
    /* (1, 0, 0, 1, 1, 1, 0, 1) / 6 */ {3886, 2, 1674, 2, 2},
    /* (0, 1, 0, 1, 1, 1, 0, 1) / -5 */ {3898, 2, 1683, 2, 0},
    /* (1, 1, 0, 1, 1, 1, 0, 1) / 2 */ {3912, 1, 1692, 1, 2},
    /* (0, 0, 1, 1, 1, 1, 0, 1) / -6 */ {3919, 2, 1697, 2, 0},
    /* (1, 0, 1, 1, 1, 1, 0, 1) / -19 */ {3931, 2, 1706, 2, 2},
    /* (0, 1, 1, 1, 1, 1, 0, 1) / -18 */ {3941, 2, 1714, 2, 3},
    /* (1, 1, 1, 1, 1, 1, 0, 1) / 1 */ {3951, 1, 1722, 1, 2},
    /* (0, 0, 0, 0, 0, 0, 1, 1) / -2 */ {3956, 2, 1726, 1, 2},
    /* (1, 0, 0, 0, 0, 0, 1, 1) / 6 */ {3972, 4, 1731, 2, 0},
    /* (0, 1, 0, 0, 0, 0, 1, 1) / -6 */ {3999, 4, 1740, 2, 2},
    /* (1, 1, 0, 0, 0, 0, 1, 1) / -10 */ {4026, 2, 1749, 2, 2},
    /* (0, 0, 1, 0, 0, 0, 1, 1) / -5 */ {4044, 3, 1759, 2, 2},
    /* (1, 0, 1, 0, 0, 0, 1, 1) / -11 */ {4065, 5, 1768, 4, 2},
    /* (0, 1, 1, 0, 0, 0, 1, 1) / 12 */ {4093, 3, 1784, 2, 0},
    /* (1, 1, 1, 0, 0, 0, 1, 1) / -6 */ {4116, 2, 1793, 2, 0},
    /* (0, 0, 0, 1, 0, 0, 1, 1) / -5 */ {4128, 3, 1802, 2, 2},
    /* (1, 0, 0, 1, 0, 0, 1, 1) / -12 */ {4149, 3, 1811, 2, 2},
    /* (0, 1, 0, 1, 0, 0, 1, 1) / 11 */ {4172, 5, 1820, 4, 0},
    /* (1, 1, 0, 1, 0, 0, 1, 1) / -6 */ {4200, 2, 1836, 2, 0},
    /* (0, 0, 1, 1, 0, 0, 1, 1) / -8 */ {4212, 1, 1845, 1, 2},
    /* (1, 0, 1, 1, 0, 0, 1, 1) / 5 */ {4221, 2, 1850, 2, 2},
    /* (0, 1, 1, 1, 0, 0, 1, 1) / -5 */ {4235, 2, 1859, 2, 0},
    /* (1, 1, 1, 1, 0, 0, 1, 1) / -2 */ {4249, 1, 1868, 1, 0},
    /* (0, 0, 0, 0, 1, 0, 1, 1) / -5 */ {4256, 3, 1873, 2, 2},
    /* (1, 0, 0, 0, 1, 0, 1, 1) / 11 */ {4277, 5, 1882, 4, 0},
    /* (0, 1, 0, 0, 1, 0, 1, 1) / -12 */ {4305, 3, 1898, 2, 2},
    /* (1, 1, 0, 0, 1, 0, 1, 1) / 6 */ {4328, 2, 1907, 2, 2},
    /* (0, 0, 1, 0, 1, 0, 1, 1) / -9 */ {4340, 3, 1916, 2, 2},
    /* (1, 0, 1, 0, 1, 0, 1, 1) / -5 */ {4361, 2, 1926, 2, 0},
    /* (0, 1, 1, 0, 1, 0, 1, 1) / -7 */ {4375, 3, 1935, 3, 0},
    /* (1, 1, 1, 0, 1, 0, 1, 1) / 18 */ {4390, 2, 1947, 2, 1},
    /* (0, 0, 0, 1, 1, 0, 1, 1) / -11 */ {4400, 5, 1955, 4, 2},
    /* (1, 0, 0, 1, 1, 0, 1, 1) / -6 */ {4428, 2, 1971, 2, 0},
    /* (0, 1, 0, 1, 1, 0, 1, 1) / 6 */ {4440, 2, 1980, 2, 2},
    /* (1, 1, 0, 1, 1, 0, 1, 1) / 19 */ {4452, 2, 1989, 2, 0},
    /* (0, 0, 1, 1, 1, 0, 1, 1) / 5 */ {4462, 2, 1997, 2, 2},
    /* (1, 0, 1, 1, 1, 0, 1, 1) / -2 */ {4476, 1, 2006, 1, 0},
    /* (0, 1, 1, 1, 1, 0, 1, 1) / -18 */ {4483, 2, 2011, 2, 3},
    /* (1, 1, 1, 1, 1, 0, 1, 1) / 1 */ {4493, 1, 2019, 1, 2},
    /* (0, 0, 0, 0, 0, 1, 1, 1) / 5 */ {4498, 3, 2023, 2, 0},
    /* (1, 0, 0, 0, 0, 1, 1, 1) / -12 */ {4519, 3, 2032, 2, 2},
    /* (0, 1, 0, 0, 0, 1, 1, 1) / -11 */ {4542, 5, 2041, 4, 2},
    /* (1, 1, 0, 0, 0, 1, 1, 1) / -6 */ {4570, 2, 2057, 2, 0},
    /* (0, 0, 1, 0, 0, 1, 1, 1) / 11 */ {4582, 5, 2066, 4, 0},
    /* (1, 0, 1, 0, 0, 1, 1, 1) / 6 */ {4610, 2, 2082, 2, 2},
    /* (0, 1, 1, 0, 0, 1, 1, 1) / 6 */ {4622, 2, 2091, 2, 2},
    /* (1, 1, 1, 0, 0, 1, 1, 1) / 19 */ {4634, 2, 2100, 2, 0},
    /* (0, 0, 0, 1, 0, 1, 1, 1) / -9 */ {4644, 3, 2108, 2, 2},
    /* (1, 0, 0, 1, 0, 1, 1, 1) / -7 */ {4665, 3, 2118, 3, 0},
    /* (0, 1, 0, 1, 0, 1, 1, 1) / 5 */ {4680, 2, 2130, 2, 2},
    /* (1, 1, 0, 1, 0, 1, 1, 1) / 18 */ {4694, 2, 2139, 2, 1},
    /* (0, 0, 1, 1, 0, 1, 1, 1) / 5 */ {4704, 2, 2147, 2, 2},
    /* (1, 0, 1, 1, 0, 1, 1, 1) / -18 */ {4718, 2, 2156, 2, 3},
    /* (0, 1, 1, 1, 0, 1, 1, 1) / -2 */ {4728, 1, 2164, 1, 0},
    /* (1, 1, 1, 1, 0, 1, 1, 1) / -1 */ {4735, 1, 2169, 1, 0},
    /* (0, 0, 0, 0, 1, 1, 1, 1) / -8 */ {4740, 1, 2173, 1, 2},
    /* (1, 0, 0, 0, 1, 1, 1, 1) / 5 */ {4749, 2, 2178, 2, 2},
    /* (0, 1, 0, 0, 1, 1, 1, 1) / 5 */ {4763, 2, 2187, 2, 2},
    /* (1, 1, 0, 0, 1, 1, 1, 1) / 2 */ {4777, 1, 2196, 1, 2},
    /* (0, 0, 1, 0, 1, 1, 1, 1) / 5 */ {4784, 2, 2201, 2, 2},
    /* (1, 0, 1, 0, 1, 1, 1, 1) / 2 */ {4798, 1, 2210, 1, 2},
    /* (0, 1, 1, 0, 1, 1, 1, 1) / 18 */ {4805, 2, 2215, 2, 1},
    /* (1, 1, 1, 0, 1, 1, 1, 1) / -1 */ {4815, 1, 2223, 1, 0},
    /* (0, 0, 0, 1, 1, 1, 1, 1) / -5 */ {4820, 2, 2227, 2, 0},
    /* (1, 0, 0, 1, 1, 1, 1, 1) / -18 */ {4834, 2, 2236, 2, 3},
    /* (0, 1, 0, 1, 1, 1, 1, 1) / -2 */ {4844, 1, 2244, 1, 0},
    /* (1, 1, 0, 1, 1, 1, 1, 1) / -1 */ {4851, 1, 2249, 1, 0},
    /* (0, 0, 1, 1, 1, 1, 1, 1) / 2 */ {4856, 1, 2253, 1, 2},
    /* (1, 0, 1, 1, 1, 1, 1, 1) / 1 */ {4863, 1, 2258, 1, 2},
    /* (0, 1, 1, 1, 1, 1, 1, 1) / 1 */ {4868, 1, 2262, 1, 2},
    /* (1, 1, 1, 1, 1, 1, 1, 1) / 21 */ {4873, 0, 2266, 0, 0},
    /* MC 33 cases follow */
    /* 3 test index:3 */ {4873, 4, 2266, 2, 0},
    /* 3 test index:3 */ {4901, 4, 2276, 2, 0},
    /* 3 test index:3 */ {4929, 4, 2286, 2, 0},
    /* 3 test index:3 */ {4957, 4, 2296, 2, 0},
    /* 3 test index:3 */ {4985, 4, 2306, 2, 0},
    /* 3 test index:3 */ {5013, 4, 2316, 2, 0},
    /* 3 test index:3 */ {5041, 4, 2326, 2, 0},
    /* 3 test index:3 */ {5069, 4, 2336, 2, 0},
    /* 3 test index:3 */ {5097, 4, 2346, 2, 0},
    /* 18 test index:3 */ {5125, 2, 2356, 2, 0},
    /* 18 test index:3 */ {5142, 2, 2366, 2, 0},
    /* 18 test index:3 */ {5159, 2, 2376, 2, 0},
    /* 3 test index:3 */ {5176, 4, 2386, 2, 0},
    /* 3 test index:3 */ {5204, 4, 2396, 2, 0},
    /* 3 test index:3 */ {5232, 4, 2406, 2, 0},
    /* 18 test index:3 */ {5260, 2, 2416, 2, 0},
    /* 18 test index:3 */ {5277, 2, 2426, 2, 0},
    /* 18 test index:3 */ {5294, 2, 2436, 2, 0},
    /* 18 test index:3 */ {5311, 2, 2446, 2, 0},
    /* 18 test index:3 */ {5328, 2, 2456, 2, 0},
    /* 18 test index:3 */ {5345, 2, 2466, 2, 0},
    /* 18 test index:3 */ {5362, 2, 2476, 2, 0},
    /* 18 test index:3 */ {5379, 2, 2486, 2, 0},
    /* 18 test index:3 */ {5396, 2, 2496, 2, 0},
  };


  const short table_cube3d_codim_0[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0, 0, 0, 0, 0, 0) / 0 / 8 / 0 */ 8, VA, VB, VC, VD, VE, VF, VG, VH,
    /* (1, 0, 0, 0, 0, 0, 0, 0) / 1 / 6, 6, 6 / 9 */ 6, EN, EJ, EL, VE, VF, VG, 6, EJ, VB, VF, EL, VC, VG, 6, VB, VD, VC, VF, VH, VG,
    /* (0, 1, 0, 0, 0, 0, 0, 0) / -1 / 6, 6, 6 / 30 */ 6, VD, VH, VC, EM, EO, EJ, 6, EJ, VA, VC, EO, VF, VH, 6, VH, VG, VC, VF, VE, VA,
    /* (1, 1, 0, 0, 0, 0, 0, 0) / 2 / 8, 6 / 51 */ 8, EM, VD, EO, VH, EL, VC, EN, VG, 6, EO, VH, VF, EN, VG, VE,
    /* (0, 0, 1, 0, 0, 0, 0, 0) / -1 / 6, 6, 6 / 67 */ 6, VD, VB, VH, EK, EL, EP, 6, EP, VG, VH, EL, VA, VB, 6, VB, VF, VH, VA, VE, VG,
    /* (1, 0, 1, 0, 0, 0, 0, 0) / -2 / 8, 6 / 88 */ 8, EP, VG, EK, VH, EN, VE, EJ, VF, 6, EK, VH, VD, EJ, VF, VB,
    /* (0, 1, 1, 0, 0, 0, 0, 0) / 3 / 6, 6, 6, 6 / 104 */ 6, EO, EM, EJ, VF, VH, VE, 6, EM, VD, VH, EJ, VA, VE, 6, EK, VD, VH, EL, VA, VE, 6, EK, EL, EP, VH, VE, VG,
    /* (1, 1, 1, 0, 0, 0, 0, 0) / 5 / 6, 6, 6 / 132 */ 6, EO, EP, EN, VF, VG, VE, 6, VD, EK, EM, VH, VG, VF, 6, EK, EP, VG, EM, EO, VF,
    /* (0, 0, 0, 1, 0, 0, 0, 0) / 1 / 6, 6, 6 / 153 */ 6, EK, EM, EQ, VC, VA, VG, 6, EM, VB, VA, EQ, VH, VG, 6, VB, VF, VH, VA, VE, VG,
    /* (1, 0, 0, 1, 0, 0, 0, 0) / -3 / 6, 6, 6, 6 / 174 */ 6, VE, VG, VF, EN, EL, EJ, 6, EJ, VB, VF, EL, VC, VG, 6, EM, VB, VF, EK, VC, VG, 6, VG, VF, VH, EK, EM, EQ,
    /* (0, 1, 0, 1, 0, 0, 0, 0) / 2 / 8, 6 / 202 */ 8, EO, VF, EJ, VE, EQ, VH, EK, VG, 6, EJ, VE, VA, EK, VG, VC,
    /* (1, 1, 0, 1, 0, 0, 0, 0) / -5 / 6, 6, 6 / 218 */ 6, VE, VH, VF, EN, EQ, EO, 6, VG, VH, VE, VC, EK, EL, 6, EL, EN, VE, EK, EQ, VH,
    /* (0, 0, 1, 1, 0, 0, 0, 0) / 2 / 8, 6 / 239 */ 8, EQ, VH, EM, VF, EP, VG, EL, VE, 6, EM, VF, VB, EL, VE, VA,
    /* (1, 0, 1, 1, 0, 0, 0, 0) / 5 / 6, 6, 6 / 255 */ 6, EN, EQ, EP, VE, VH, VG, 6, VB, EM, EJ, VF, VH, VE, 6, EM, EQ, VH, EJ, EN, VE,
    /* (0, 1, 1, 1, 0, 0, 0, 0) / -5 / 6, 6, 6 / 276 */ 6, VF, VG, VH, EO, EP, EQ, 6, VE, VG, VF, VA, EL, EJ, 6, EJ, EO, VF, EL, EP, VG,
    /* (1, 1, 1, 1, 0, 0, 0, 0) / 8 / 8 / 297 */ 8, EN, EO, EP, EQ, VE, VF, VG, VH,
    /* (0, 0, 0, 0, 1, 0, 0, 0) / 1 / 6, 6, 6 / 306 */ 6, ER, EN, ET, VF, VB, VH, 6, EN, VA, VB, ET, VG, VH, 6, VA, VC, VG, VB, VD, VH,
    /* (1, 0, 0, 0, 1, 0, 0, 0) / 2 / 8, 6 / 327 */ 8, EL, VC, EJ, VD, ET, VG, ER, VH, 6, EJ, VD, VB, ER, VH, VF,
    /* (0, 1, 0, 0, 1, 0, 0, 0) / 3 / 6, 6, 6, 6 / 343 */ 6, ET, ER, EN, VG, VH, VC, 6, ER, VF, VH, EN, VA, VC, 6, EO, VF, VH, EJ, VA, VC, 6, EO, EJ, EM, VH, VC, VD,
    /* (1, 1, 0, 0, 1, 0, 0, 0) / 5 / 6, 6, 6 / 371 */ 6, ET, EM, EL, VG, VD, VC, 6, VF, EO, ER, VH, VD, VG, 6, EO, EM, VD, ER, ET, VG,
    /* (0, 0, 1, 0, 1, 0, 0, 0) / -3 / 6, 6, 6, 6 / 392 */ 6, VF, VH, VB, ER, ET, EN, 6, EN, VA, VB, ET, VG, VH, 6, EL, VA, VB, EP, VG, VH, 6, VH, VB, VD, EP, EL, EK,
    /* (1, 0, 1, 0, 1, 0, 0, 0) / -5 / 6, 6, 6 / 420 */ 6, VF, VD, VB, ER, EK, EJ, 6, VH, VD, VF, VG, EP, ET, 6, ET, ER, VF, EP, EK, VD,
    /* (0, 1, 1, 0, 1, 0, 0, 0) / 7 / 6, 6, 6, 4, 4 / 441 */ 6, EO, EJ, EM, VF, VA, VD, 6, ER, EN, ET, VF, VA, VG, 6, EK, EP, EL, VD, VG, VA, 4, VF, VD, VG, VA, 4, VF, VD, VG, VH,
    /* (1, 1, 1, 0, 1, 0, 0, 0) / 9 / 6, 6, 6 / 472 */ 6, EK, EM, VD, VG, VF, VH, 6, VG, EP, EK, VF, EO, EM, 6, ET, EP, VG, ER, EO, VF,
    /* (0, 0, 0, 1, 1, 0, 0, 0) / 4 / 6, 6, 6, 6 / 493 */ 6, EK, EM, EQ, VG, VF, VH, 6, VB, VC, VA, ER, ET, EN, 6, EK, VC, VG, EM, VB, VF, 6, VC, ET, VG, VB, ER, VF,
    /* (1, 0, 0, 1, 1, 0, 0, 0) / 6 / 8, 6, 5, 4 / 521 */ 8, ET, ER, EL, EJ, VH, VF, EM, VB, 6, ET, VG, VH, EL, VC, EM, 5, VG, VC, EM, VH, EQ, 4, VC, EQ, EM, EK,
    /* (0, 1, 0, 1, 1, 0, 0, 0) / -6 / 8, 6, 5, 4 / 548 */ 8, VG, VH, ER, VF, EK, EQ, EJ, EO, 6, EJ, VA, ER, EK, VC, VG, 5, VA, VC, VG, ER, ET, 4, EN, VA, ER, ET,
    /* (1, 1, 0, 1, 1, 0, 0, 0) / 11 / 4, 5, 4, 5, 5 / 575 */ 4, ER, ET, EL, EQ, 5, ET, VG, VC, EL, EQ, 4, EQ, EL, VC, EK, 5, VH, ER, ET, VG, EQ, 5, VH, EQ, EO, VF, ER,
    /* (0, 0, 1, 1, 1, 0, 0, 0) / -6 / 8, 6, 5, 4 / 603 */ 8, VF, VB, EN, VA, EQ, EM, EP, EL, 6, EP, VG, EN, EQ, VH, VF, 5, VG, VH, VF, EN, ER, 4, ET, VG, EN, ER,
    /* (1, 0, 1, 1, 1, 0, 0, 0) / -11 / 4, 5, 4, 5, 5 / 630 */ 4, ER, EM, EP, EQ, 5, VH, EQ, EP, VG, ER, 4, ET, ER, VG, EP, 5, EM, VF, VH, EQ, ER, 5, ER, VF, VB, EJ, EM,
    /* (0, 1, 1, 1, 1, 0, 0, 0) / 12 / 6, 8, 6 / 658 */ 6, VA, EJ, EL, EN, ER, ET, 8, EL, EJ, EP, EO, ET, ER, VG, VF, 6, EP, EO, EQ, VG, VF, VH,
    /* (1, 1, 1, 1, 1, 0, 0, 0) / -5 / 6, 6 / 681 */ 6, ER, VF, EO, ET, VG, EP, 6, VG, VF, VH, EP, EO, EQ,
    /* (0, 0, 0, 0, 0, 1, 0, 0) / 1 / 6, 6, 6 / 695 */ 6, ER, EU, EO, VE, VG, VA, 6, EU, VH, VG, EO, VB, VA, 6, VH, VD, VB, VG, VC, VA,
    /* (1, 0, 0, 0, 0, 1, 0, 0) / -3 / 6, 6, 6, 6 / 716 */ 6, VH, VG, VD, EU, ER, EO, 6, EO, VB, VD, ER, VE, VG, 6, EJ, VB, VD, EN, VE, VG, 6, VG, VD, VC, EN, EJ, EL,
    /* (0, 1, 0, 0, 0, 1, 0, 0) / -2 / 8, 6 / 744 */ 8, EJ, VA, EM, VC, ER, VE, EU, VG, 6, EM, VC, VD, EU, VG, VH,
    /* (1, 1, 0, 0, 0, 1, 0, 0) / -5 / 6, 6, 6 / 760 */ 6, VH, VC, VD, EU, EL, EM, 6, VG, VC, VH, VE, EN, ER, 6, ER, EU, VH, EN, EL, VC,
    /* (0, 0, 1, 0, 0, 1, 0, 0) / 4 / 6, 6, 6, 6 / 781 */ 6, EP, EL, EK, VH, VB, VD, 6, VA, VG, VE, EO, EU, ER, 6, EP, VG, VH, EL, VA, VB, 6, VG, EU, VH, VA, EO, VB,
    /* (1, 0, 1, 0, 0, 1, 0, 0) / 6 / 8, 6, 5, 4 / 809 */ 8, EK, EP, EJ, EN, VH, VG, ER, VE, 6, EK, VD, VH, EJ, VB, ER, 5, VD, VB, ER, VH, EU, 4, VB, EU, ER, EO,
    /* (0, 1, 1, 0, 0, 1, 0, 0) / -6 / 8, 6, 5, 4 / 836 */ 8, VG, VE, EL, VA, EU, ER, EM, EJ, 6, EM, VD, EL, EU, VH, VG, 5, VD, VH, VG, EL, EP, 4, EK, VD, EL, EP,
    /* (1, 1, 1, 0, 0, 1, 0, 0) / -11 / 4, 5, 4, 5, 5 / 863 */ 4, EP, ER, EM, EU, 5, VH, EU, EM, VD, EP, 4, EK, EP, VD, EM, 5, ER, VG, VH, EU, EP, 5, EP, VG, VE, EN, ER,
    /* (0, 0, 0, 1, 0, 1, 0, 0) / -3 / 6, 6, 6, 6 / 891 */ 6, VE, VA, VG, ER, EO, EU, 6, EU, VH, VG, EO, VB, VA, 6, EQ, VH, VG, EM, VB, VA, 6, VA, VG, VC, EM, EQ, EK,
    /* (1, 0, 0, 1, 0, 1, 0, 0) / -7 / 6, 6, 6, 4, 4 / 919 */ 6, VH, VB, VE, EU, EO, ER, 6, VH, VB, VC, EQ, EM, EK, 6, VE, VC, VB, EN, EL, EJ, 4, VB, VH, VC, VE, 4, VG, VH, VC, VE,
    /* (0, 1, 0, 1, 0, 1, 0, 0) / -5 / 6, 6, 6 / 950 */ 6, VC, VE, VA, EK, ER, EJ, 6, VG, VE, VC, VH, EU, EQ, 6, EQ, EK, VC, EU, ER, VE,
    /* (1, 1, 0, 1, 0, 1, 0, 0) / -9 / 6, 6, 6 / 971 */ 6, VC, VH, VG, EN, ER, VE, 6, VH, EU, ER, VC, EL, EN, 6, EQ, EU, VH, EK, EL, VC,
    /* (0, 0, 1, 1, 0, 1, 0, 0) / 6 / 8, 6, 5, 4 / 992 */ 8, EP, EL, EQ, EM, VE, VA, EO, VB, 6, EP, VG, VE, EQ, VH, EO, 5, VG, VH, EO, VE, ER, 4, VH, ER, EO, EU,
    /* (1, 0, 1, 1, 0, 1, 0, 0) / -12 / 6, 8, 6 / 1019 */ 6, EO, ER, EU, VB, EJ, EM, 8, EU, ER, VH, VE, EM, EJ, EQ, EN, 6, VH, VE, VG, EQ, EN, EP,
    /* (0, 1, 1, 1, 0, 1, 0, 0) / 11 / 4, 5, 4, 5, 5 / 1042 */ 4, EL, EP, EQ, ER, 5, EP, VG, VH, EQ, ER, 4, ER, EQ, VH, EU, 5, VE, EL, EP, VG, ER, 5, VE, ER, EJ, VA, EL,
    /* (1, 1, 1, 1, 0, 1, 0, 0) / 5 / 6, 6 / 1070 */ 6, EU, VH, EQ, ER, VE, EN, 6, EQ, EN, EP, VH, VE, VG,
    /* (0, 0, 0, 0, 1, 1, 0, 0) / -2 / 8, 6 / 1084 */ 8, ET, VG, EN, VC, EU, VH, EO, VD, 6, EN, VC, VA, EO, VD, VB,
    /* (1, 0, 0, 0, 1, 1, 0, 0) / -5 / 6, 6, 6 / 1100 */ 6, VC, VH, VG, EL, EU, ET, 6, VD, VH, VC, VB, EO, EJ, 6, EJ, EL, VC, EO, EU, VH,
    /* (0, 1, 0, 0, 1, 1, 0, 0) / 5 / 6, 6, 6 / 1121 */ 6, EM, ET, EU, VD, VG, VH, 6, VA, EN, EJ, VC, VG, VD, 6, EN, ET, VG, EJ, EM, VD,
    /* (1, 1, 0, 0, 1, 1, 0, 0) / -8 / 8 / 1142 */ 8, VD, VH, VC, VG, EM, EU, EL, ET,
    /* (0, 0, 1, 0, 1, 1, 0, 0) / 6 / 8, 6, 5, 4 / 1151 */ 8, EU, EO, ET, EN, VD, VB, EL, VA, 6, EU, VH, VD, ET, VG, EL, 5, VH, VG, EL, VD, EK, 4, VG, EK, EL, EP,
    /* (1, 0, 1, 0, 1, 1, 0, 0) / 11 / 4, 5, 4, 5, 5 / 1178 */ 4, EO, EU, ET, EK, 5, EU, VH, VG, ET, EK, 4, EK, ET, VG, EP, 5, VD, EO, EU, VH, EK, 5, VD, EK, EJ, VB, EO,
    /* (0, 1, 1, 0, 1, 1, 0, 0) / 12 / 6, 8, 6 / 1206 */ 6, VA, EN, EJ, EL, EP, EK, 8, EJ, EN, EM, ET, EK, EP, VD, VG, 6, EM, ET, EU, VD, VG, VH,
    /* (1, 1, 1, 0, 1, 1, 0, 0) / -5 / 6, 6 / 1229 */ 6, EP, VG, ET, EK, VD, EM, 6, VD, VG, VH, EM, ET, EU,
    /* (0, 0, 0, 1, 1, 1, 0, 0) / 6 / 8, 6, 5, 4 / 1243 */ 8, EN, ET, EO, EU, VC, VG, EQ, VH, 6, EN, VA, VC, EO, VB, EQ, 5, VA, VB, EQ, VC, EK, 4, VB, EK, EQ, EM,
    /* (1, 0, 0, 1, 1, 1, 0, 0) / -12 / 6, 8, 6 / 1270 */ 6, EM, EQ, EK, VB, EO, EJ, 8, EK, EQ, VC, VH, EJ, EO, EL, EU, 6, VC, VH, VG, EL, EU, ET,
    /* (0, 1, 0, 1, 1, 1, 0, 0) / -11 / 4, 5, 4, 5, 5 / 1293 */ 4, ET, EQ, EJ, EK, 5, VC, EK, EJ, VA, ET, 4, EN, ET, VA, EJ, 5, EQ, VG, VC, EK, ET, 5, ET, VG, VH, EU, EQ,
    /* (1, 1, 0, 1, 1, 1, 0, 0) / 5 / 6, 6 / 1321 */ 6, EK, VC, EL, EQ, VH, EU, 6, EL, EU, ET, VC, VH, VG,
    /* (0, 0, 1, 1, 1, 1, 0, 0) / 10 / 8, 8 / 1335 */ 8, EL, VA, EP, VG, EM, VB, EQ, VH, 8, VG, VA, ET, EN, VH, VB, EU, EO,
    /* (1, 0, 1, 1, 1, 1, 0, 0) / -6 / 6, 4 / 1353 */ 6, VG, EP, ET, VH, EQ, EU, 4, EJ, EO, EM, VB,
    /* (0, 1, 1, 1, 1, 1, 0, 0) / 6 / 6, 4 / 1365 */ 6, VG, EP, ET, VH, EQ, EU, 4, VA, EJ, EL, EN,
    /* (1, 1, 1, 1, 1, 1, 0, 0) / -2 / 6 / 1377 */ 6, VG, ET, EP, VH, EU, EQ,
    /* (0, 0, 0, 0, 0, 0, 1, 0) / -1 / 6, 6, 6 / 1384 */ 6, VE, VF, VA, ET, ES, EP, 6, EP, VC, VA, ES, VH, VF, 6, VF, VB, VA, VH, VD, VC,
    /* (1, 0, 0, 0, 0, 0, 1, 0) / 3 / 6, 6, 6, 6 / 1405 */ 6, EJ, EL, EN, VB, VD, VF, 6, EL, VC, VD, EN, VE, VF, 6, EP, VC, VD, ET, VE, VF, 6, EP, ET, ES, VD, VF, VH,
    /* (0, 1, 0, 0, 0, 0, 1, 0) / -4 / 6, 6, 6, 6 / 1433 */ 6, VC, VE, VA, EM, EO, EJ, 6, ET, EP, ES, VF, VD, VH, 6, EO, VF, VE, EM, VD, VC, 6, VF, ET, VE, VD, EP, VC,
    /* (1, 1, 0, 0, 0, 0, 1, 0) / -6 / 8, 6, 5, 4 / 1461 */ 8, VH, VF, ET, VE, EM, EO, EL, EN, 6, EL, VC, ET, EM, VD, VH, 5, VC, VD, VH, ET, ES, 4, EP, VC, ET, ES,
    /* (0, 0, 1, 0, 0, 0, 1, 0) / 2 / 8, 6 / 1488 */ 8, EK, VD, EL, VB, ES, VH, ET, VF, 6, EL, VB, VA, ET, VF, VE,
    /* (1, 0, 1, 0, 0, 0, 1, 0) / -5 / 6, 6, 6 / 1504 */ 6, VB, VH, VD, EJ, ES, EK, 6, VF, VH, VB, VE, ET, EN, 6, EN, EJ, VB, ET, ES, VH,
    /* (0, 1, 1, 0, 0, 0, 1, 0) / 6 / 8, 6, 5, 4 / 1525 */ 8, ES, ET, EK, EL, VF, VE, EJ, VA, 6, ES, VH, VF, EK, VD, EJ, 5, VH, VD, EJ, VF, EO, 4, VD, EO, EJ, EM,
    /* (1, 1, 1, 0, 0, 0, 1, 0) / 11 / 4, 5, 4, 5, 5 / 1552 */ 4, ET, ES, EK, EO, 5, ES, VH, VD, EK, EO, 4, EO, EK, VD, EM, 5, VF, ET, ES, VH, EO, 5, VF, EO, EN, VE, ET,
    /* (0, 0, 0, 1, 0, 0, 1, 0) / -3 / 6, 6, 6, 6 / 1580 */ 6, VE, VF, VA, ET, ES, EP, 6, EP, VC, VA, ES, VH, VF, 6, EK, VC, VA, EQ, VH, VF, 6, VF, VA, VB, EQ, EK, EM,
    /* (1, 0, 0, 1, 0, 0, 1, 0) / -7 / 6, 6, 6, 4, 4 / 1608 */ 6, VB, VC, VE, EJ, EL, EN, 6, VB, VC, VH, EM, EK, EQ, 6, VE, VH, VC, ET, ES, EP, 4, VC, VB, VH, VE, 4, VF, VB, VH, VE,
    /* (0, 1, 0, 1, 0, 0, 1, 0) / 6 / 8, 6, 5, 4 / 1639 */ 8, EJ, EO, EK, EQ, VE, VF, ES, VH, 6, EJ, VA, VE, EK, VC, ES, 5, VA, VC, ES, VE, ET, 4, VC, ET, ES, EP,
    /* (1, 1, 0, 1, 0, 0, 1, 0) / 12 / 6, 8, 6 / 1666 */ 6, VC, EL, EK, EP, ET, ES, 8, EK, EL, EQ, EN, ES, ET, VH, VE, 6, EQ, EN, EO, VH, VE, VF,
    /* (0, 0, 1, 1, 0, 0, 1, 0) / -5 / 6, 6, 6 / 1689 */ 6, VE, VB, VA, ET, EM, EL, 6, VF, VB, VE, VH, EQ, ES, 6, ES, ET, VE, EQ, EM, VB,
    /* (1, 0, 1, 1, 0, 0, 1, 0) / -9 / 6, 6, 6 / 1710 */ 6, VH, VB, VF, ET, EN, VE, 6, VB, EJ, EN, VH, ES, ET, 6, EM, EJ, VB, EQ, ES, VH,
    /* (0, 1, 1, 1, 0, 0, 1, 0) / -11 / 4, 5, 4, 5, 5 / 1731 */ 4, ET, EJ, EQ, EO, 5, VF, EO, EQ, VH, ET, 4, ES, ET, VH, EQ, 5, EJ, VE, VF, EO, ET, 5, ET, VE, VA, EL, EJ,
    /* (1, 1, 1, 1, 0, 0, 1, 0) / -5 / 6, 6 / 1759 */ 6, ET, VE, EN, ES, VH, EQ, 6, VH, VE, VF, EQ, EN, EO,
    /* (0, 0, 0, 0, 1, 0, 1, 0) / -2 / 8, 6 / 1773 */ 8, ES, VH, EP, VD, ER, VF, EN, VB, 6, EP, VD, VC, EN, VB, VA,
    /* (1, 0, 0, 0, 1, 0, 1, 0) / 5 / 6, 6, 6 / 1789 */ 6, EJ, ES, ER, VB, VH, VF, 6, VC, EP, EL, VD, VH, VB, 6, EP, ES, VH, EL, EJ, VB,
    /* (0, 1, 0, 0, 1, 0, 1, 0) / -6 / 8, 6, 5, 4 / 1810 */ 8, VD, VC, EJ, VA, ES, EP, ER, EN, 6, ER, VF, EJ, ES, VH, VD, 5, VF, VH, VD, EJ, EM, 4, EO, VF, EJ, EM,
    /* (1, 1, 0, 0, 1, 0, 1, 0) / -11 / 4, 5, 4, 5, 5 / 1837 */ 4, ES, EO, EL, EM, 5, VD, EM, EL, VC, ES, 4, EP, ES, VC, EL, 5, EO, VH, VD, EM, ES, 5, ES, VH, VF, ER, EO,
    /* (0, 0, 1, 0, 1, 0, 1, 0) / 5 / 6, 6, 6 / 1865 */ 6, ER, EK, ES, VF, VD, VH, 6, VA, EL, EN, VB, VD, VF, 6, EL, EK, VD, EN, ER, VF,
    /* (1, 0, 1, 0, 1, 0, 1, 0) / 8 / 8 / 1886 */ 8, ER, EJ, ES, EK, VF, VB, VH, VD,
    /* (0, 1, 1, 0, 1, 0, 1, 0) / -12 / 6, 8, 6 / 1895 */ 6, EJ, EO, EM, VA, EN, EL, 8, EM, EO, VD, VF, EL, EN, EK, ER, 6, VD, VF, VH, EK, ER, ES,
    /* (1, 1, 1, 0, 1, 0, 1, 0) / 5 / 6, 6 / 1918 */ 6, EM, VD, EK, EO, VF, ER, 6, EK, ER, ES, VD, VF, VH,
    /* (0, 0, 0, 1, 1, 0, 1, 0) / -6 / 8, 6, 5, 4 / 1932 */ 8, VB, VF, EQ, VH, EN, ER, EP, ES, 6, EP, VC, EQ, EN, VA, VB, 5, VC, VA, VB, EQ, EM, 4, EK, VC, EQ, EM,
    /* (1, 0, 0, 1, 1, 0, 1, 0) / -12 / 6, 8, 6 / 1959 */ 6, EK, EM, EQ, VC, EL, EP, 8, EQ, EM, VH, VB, EP, EL, ES, EJ, 6, VH, VB, VF, ES, EJ, ER,
    /* (0, 1, 0, 1, 1, 0, 1, 0) / 10 / 8, 8 / 1982 */ 8, EO, VF, EJ, VA, EQ, VH, EK, VC, 8, VA, VF, EN, ER, VC, VH, EP, ES,
    /* (1, 1, 0, 1, 1, 0, 1, 0) / -6 / 6, 4 / 2000 */ 6, VF, ER, EO, VH, ES, EQ, 4, EL, EK, EP, VC,
    /* (0, 0, 1, 1, 1, 0, 1, 0) / 11 / 4, 5, 4, 5, 5 / 2012 */ 4, EN, ER, ES, EM, 5, ER, VF, VH, ES, EM, 4, EM, ES, VH, EQ, 5, VB, EN, ER, VF, EM, 5, VB, EM, EL, VA, EN,
    /* (1, 0, 1, 1, 1, 0, 1, 0) / 5 / 6, 6 / 2040 */ 6, EQ, VH, ES, EM, VB, EJ, 6, ES, EJ, ER, VH, VB, VF,
    /* (0, 1, 1, 1, 1, 0, 1, 0) / 6 / 6, 4 / 2054 */ 6, VF, ER, EO, VH, ES, EQ, 4, VA, EL, EN, EJ,
    /* (1, 1, 1, 1, 1, 0, 1, 0) / 2 / 6 / 2066 */ 6, VF, EO, ER, VH, EQ, ES,
    /* (0, 0, 0, 0, 0, 1, 1, 0) / 3 / 6, 6, 6, 6 / 2073 */ 6, EO, ER, EU, VB, VA, VD, 6, ER, VE, VA, EU, VH, VD, 6, ET, VE, VA, ES, VH, VD, 6, ET, ES, EP, VA, VD, VC,
    /* (1, 0, 0, 0, 0, 1, 1, 0) / 7 / 6, 6, 6, 4, 4 / 2101 */ 6, EJ, EN, EL, VB, VE, VC, 6, EO, ER, EU, VB, VE, VH, 6, EP, ES, ET, VC, VH, VE, 4, VB, VC, VH, VE, 4, VB, VC, VH, VD,
    /* (0, 1, 0, 0, 0, 1, 1, 0) / -6 / 8, 6, 5, 4 / 2132 */ 8, VC, VD, ES, VH, EJ, EM, ER, EU, 6, ER, VE, ES, EJ, VA, VC, 5, VE, VA, VC, ES, EP, 4, ET, VE, ES, EP,
    /* (1, 1, 0, 0, 0, 1, 1, 0) / -12 / 6, 8, 6 / 2159 */ 6, ET, EP, ES, VE, EN, ER, 8, ES, EP, VH, VC, ER, EN, EU, EL, 6, VH, VC, VD, EU, EL, EM,
    /* (0, 0, 1, 0, 0, 1, 1, 0) / -6 / 8, 6, 5, 4 / 2182 */ 8, VB, VA, ER, VE, EK, EL, ES, ET, 6, ES, VH, ER, EK, VD, VB, 5, VH, VD, VB, ER, EO, 4, EU, VH, ER, EO,
    /* (1, 0, 1, 0, 0, 1, 1, 0) / 12 / 6, 8, 6 / 2209 */ 6, VE, EN, ET, ER, EO, EU, 8, ET, EN, ES, EJ, EU, EO, VH, VB, 6, ES, EJ, EK, VH, VB, VD,
    /* (0, 1, 1, 0, 0, 1, 1, 0) / 10 / 8, 8 / 2232 */ 8, ET, VE, ES, VH, EL, VA, EK, VD, 8, VH, VE, EU, ER, VD, VA, EM, EJ,
    /* (1, 1, 1, 0, 0, 1, 1, 0) / -6 / 6, 4 / 2250 */ 6, VD, EM, EK, VH, EU, ES, 4, EN, ET, ER, VE,
    /* (0, 0, 0, 1, 0, 1, 1, 0) / -7 / 6, 6, 6, 4, 4 / 2262 */ 6, VE, VH, VB, ER, EU, EO, 6, VE, VH, VC, ET, ES, EP, 6, VB, VC, VH, EM, EK, EQ, 4, VH, VE, VC, VB, 4, VA, VE, VC, VB,
    /* (1, 0, 0, 1, 0, 1, 1, 0) / 13 / 6, 6, 6, 6, 8 / 2293 */ 6, EN, EL, EJ, VE, ET, ER, 6, ER, EU, EO, EJ, EM, VB, 6, EM, EK, EQ, EU, ES, VH, 6, EP, ET, ES, VC, EL, EK, 8, EJ, EM, EL, EK, ER, EU, ET, ES,
    /* (0, 1, 0, 1, 0, 1, 1, 0) / -12 / 6, 8, 6 / 2330 */ 6, ES, ET, EP, VH, EU, EQ, 8, EP, ET, VC, VE, EQ, EU, EK, ER, 6, VC, VE, VA, EK, ER, EJ,
    /* (1, 1, 0, 1, 0, 1, 1, 0) / -7 / 4, 4, 4 / 2353 */ 4, EK, VC, EL, EP, 4, ER, ET, EN, VE, 4, EQ, ES, EU, VH,
    /* (0, 0, 1, 1, 0, 1, 1, 0) / -12 / 6, 8, 6 / 2368 */ 6, EU, EO, ER, VH, EQ, ES, 8, ER, EO, VE, VB, ES, EQ, ET, EM, 6, VE, VB, VA, ET, EM, EL,
    /* (1, 0, 1, 1, 0, 1, 1, 0) / -7 / 4, 4, 4 / 2391 */ 4, EQ, VH, ES, EU, 4, EN, ER, ET, VE, 4, EM, EO, EJ, VB,
    /* (0, 1, 1, 1, 0, 1, 1, 0) / -6 / 6, 4 / 2406 */ 6, VA, EL, EJ, VE, ET, ER, 4, EQ, EU, ES, VH,
    /* (1, 1, 1, 1, 0, 1, 1, 0) / 18 / 4, 4 / 2418 */ 4, VE, ER, EN, ET, 4, ES, VH, EU, EQ,
    /* (0, 0, 0, 0, 1, 1, 1, 0) / -5 / 6, 6, 6 / 2428 */ 6, VB, VC, VA, EO, EP, EN, 6, VD, VC, VB, VH, ES, EU, 6, EU, EO, VB, ES, EP, VC,
    /* (1, 0, 0, 0, 1, 1, 1, 0) / 9 / 6, 6, 6 / 2449 */ 6, EP, EL, VC, VH, VB, VD, 6, VH, ES, EP, VB, EJ, EL, 6, EU, ES, VH, EO, EJ, VB,
    /* (0, 1, 0, 0, 1, 1, 1, 0) / 11 / 4, 5, 4, 5, 5 / 2470 */ 4, EJ, EM, EU, EP, 5, EM, VD, VH, EU, EP, 4, EP, EU, VH, ES, 5, VC, EJ, EM, VD, EP, 5, VC, EP, EN, VA, EJ,
    /* (1, 1, 0, 0, 1, 1, 1, 0) / 5 / 6, 6 / 2498 */ 6, ES, VH, EU, EP, VC, EL, 6, EU, EL, EM, VH, VC, VD,
    /* (0, 0, 1, 0, 1, 1, 1, 0) / -11 / 4, 5, 4, 5, 5 / 2512 */ 4, EO, EL, ES, EK, 5, VD, EK, ES, VH, EO, 4, EU, EO, VH, ES, 5, EL, VB, VD, EK, EO, 5, EO, VB, VA, EN, EL,
    /* (1, 0, 1, 0, 1, 1, 1, 0) / -5 / 6, 6 / 2540 */ 6, EO, VB, EJ, EU, VH, ES, 6, VH, VB, VD, ES, EJ, EK,
    /* (0, 1, 1, 0, 1, 1, 1, 0) / -6 / 6, 4 / 2554 */ 6, VH, ES, EU, VD, EK, EM, 4, EN, EJ, EL, VA,
    /* (1, 1, 1, 0, 1, 1, 1, 0) / -2 / 6 / 2566 */ 6, VH, EU, ES, VD, EM, EK,
    /* (0, 0, 0, 1, 1, 1, 1, 0) / 12 / 6, 8, 6 / 2573 */ 6, VH, EU, ES, EQ, EM, EK, 8, ES, EU, EP, EO, EK, EM, VC, VB, 6, EP, EO, EN, VC, VB, VA,
    /* (1, 0, 0, 1, 1, 1, 1, 0) / 7 / 4, 4, 4 / 2596 */ 4, EQ, EU, ES, VH, 4, VC, EL, EP, EK, 4, VB, EO, EJ, EM,
    /* (0, 1, 0, 1, 1, 1, 1, 0) / -6 / 6, 4 / 2611 */ 6, VA, EJ, EN, VC, EK, EP, 4, EU, ES, EQ, VH,
    /* (1, 1, 0, 1, 1, 1, 1, 0) / 18 / 4, 4 / 2623 */ 4, VC, EP, EL, EK, 4, EQ, VH, ES, EU,
    /* (0, 0, 1, 1, 1, 1, 1, 0) / 6 / 6, 4 / 2633 */ 6, VB, EM, EO, VA, EL, EN, 4, VH, ES, EQ, EU,
    /* (1, 0, 1, 1, 1, 1, 1, 0) / -18 / 4, 4 / 2645 */ 4, EM, VB, EJ, EO, 4, ES, EQ, EU, VH,
    /* (0, 1, 1, 1, 1, 1, 1, 0) / 19 / 4, 4 / 2655 */ 4, VA, EJ, EL, EN, 4, ES, EU, EQ, VH,
    /* (1, 1, 1, 1, 1, 1, 1, 0) / -1 / 4 / 2665 */ 4, ES, EU, EQ, VH,
    /* (0, 0, 0, 0, 0, 0, 0, 1) / -1 / 6, 6, 6 / 2670 */ 6, VG, VE, VC, ES, EU, EQ, 6, EQ, VD, VC, EU, VF, VE, 6, VE, VA, VC, VF, VB, VD,
    /* (1, 0, 0, 0, 0, 0, 0, 1) / -4 / 6, 6, 6, 6 / 2691 */ 6, VG, VF, VE, EL, EJ, EN, 6, EU, ES, EQ, VB, VC, VD, 6, EJ, VB, VF, EL, VC, VG, 6, VB, EU, VF, VC, ES, VG,
    /* (0, 1, 0, 0, 0, 0, 0, 1) / 3 / 6, 6, 6, 6 / 2719 */ 6, ES, EQ, EU, VG, VC, VE, 6, EQ, VD, VC, EU, VF, VE, 6, EM, VD, VC, EO, VF, VE, 6, EM, EO, EJ, VC, VE, VA,
    /* (1, 1, 0, 0, 0, 0, 0, 1) / -6 / 8, 6, 5, 4 / 2747 */ 8, VG, VC, EQ, VD, EN, EL, EO, EM, 6, EO, VF, EQ, EN, VE, VG, 5, VF, VE, VG, EQ, ES, 4, EU, VF, EQ, ES,
    /* (0, 0, 1, 0, 0, 0, 0, 1) / -3 / 6, 6, 6, 6 / 2774 */ 6, VF, VB, VE, EU, EQ, ES, 6, ES, VG, VE, EQ, VD, VB, 6, EP, VG, VE, EK, VD, VB, 6, VB, VE, VA, EK, EP, EL,
    /* (1, 0, 1, 0, 0, 0, 0, 1) / -6 / 8, 6, 5, 4 / 2802 */ 8, VF, VE, ES, VG, EJ, EN, EK, EP, 6, EK, VD, ES, EJ, VB, VF, 5, VD, VB, VF, ES, EU, 4, EQ, VD, ES, EU,
    /* (0, 1, 1, 0, 0, 0, 0, 1) / 7 / 6, 6, 6, 4, 4 / 2829 */ 6, EJ, EM, EO, VA, VD, VF, 6, EL, EK, EP, VA, VD, VG, 6, EU, ES, EQ, VF, VG, VD, 4, VA, VF, VG, VD, 4, VA, VF, VG, VE,
    /* (1, 1, 1, 0, 0, 0, 0, 1) / -12 / 6, 8, 6 / 2860 */ 6, EQ, EU, ES, VD, EM, EK, 8, ES, EU, VG, VF, EK, EM, EP, EO, 6, VG, VF, VE, EP, EO, EN,
    /* (0, 0, 0, 1, 0, 0, 0, 1) / 2 / 8, 6 / 2883 */ 8, ES, VG, EU, VE, EK, VC, EM, VA, 6, EU, VE, VF, EM, VA, VB,
    /* (1, 0, 0, 1, 0, 0, 0, 1) / -6 / 8, 6, 5, 4 / 2899 */ 8, VE, VF, EJ, VB, ES, EU, EK, EM, 6, EK, VC, EJ, ES, VG, VE, 5, VC, VG, VE, EJ, EN, 4, EL, VC, EJ, EN,
    /* (0, 1, 0, 1, 0, 0, 0, 1) / 5 / 6, 6, 6 / 2926 */ 6, EJ, ES, EK, VA, VG, VC, 6, VF, EU, EO, VE, VG, VA, 6, EU, ES, VG, EO, EJ, VA,
    /* (1, 1, 0, 1, 0, 0, 0, 1) / -11 / 4, 5, 4, 5, 5 / 2947 */ 4, EN, EU, EK, ES, 5, VG, ES, EK, VC, EN, 4, EL, EN, VC, EK, 5, EU, VE, VG, ES, EN, 5, EN, VE, VF, EO, EU,
    /* (0, 0, 1, 1, 0, 0, 0, 1) / 5 / 6, 6, 6 / 2975 */ 6, EU, EL, EM, VF, VA, VB, 6, VG, EP, ES, VE, VA, VF, 6, EP, EL, VA, ES, EU, VF,
    /* (1, 0, 1, 1, 0, 0, 0, 1) / 11 / 4, 5, 4, 5, 5 / 2996 */ 4, EJ, EN, EP, EU, 5, EN, VE, VG, EP, EU, 4, EU, EP, VG, ES, 5, VF, EJ, EN, VE, EU, 5, VF, EU, EM, VB, EJ,
    /* (0, 1, 1, 1, 0, 0, 0, 1) / 9 / 6, 6, 6 / 3024 */ 6, EU, EO, VF, VG, VA, VE, 6, VG, ES, EU, VA, EJ, EO, 6, EP, ES, VG, EL, EJ, VA,
    /* (1, 1, 1, 1, 0, 0, 0, 1) / 5 / 6, 6 / 3045 */ 6, ES, VG, EP, EU, VF, EO, 6, EP, EO, EN, VG, VF, VE,
    /* (0, 0, 0, 0, 1, 0, 0, 1) / -3 / 6, 6, 6, 6 / 3059 */ 6, VA, VB, VC, EN, ER, ET, 6, ET, VG, VC, ER, VF, VB, 6, ES, VG, VC, EU, VF, VB, 6, VB, VC, VD, EU, ES, EQ,
    /* (1, 0, 0, 0, 1, 0, 0, 1) / -6 / 8, 6, 5, 4 / 3087 */ 8, VD, VB, EU, VF, EL, EJ, ET, ER, 6, ET, VG, EU, EL, VC, VD, 5, VG, VC, VD, EU, EQ, 4, ES, VG, EU, EQ,
    /* (0, 1, 0, 0, 1, 0, 0, 1) / 7 / 6, 6, 6, 4, 4 / 3114 */ 6, ES, EU, EQ, VG, VF, VD, 6, ET, ER, EN, VG, VF, VA, 6, EM, EJ, EO, VD, VA, VF, 4, VG, VD, VA, VF, 4, VG, VD, VA, VC,
    /* (1, 1, 0, 0, 1, 0, 0, 1) / 12 / 6, 8, 6 / 3145 */ 6, VF, EO, ER, EU, EQ, ES, 8, ER, EO, ET, EM, ES, EQ, VG, VD, 6, ET, EM, EL, VG, VD, VC,
    /* (0, 0, 1, 0, 1, 0, 0, 1) / -7 / 6, 6, 6, 4, 4 / 3168 */ 6, VF, VG, VD, EU, ES, EQ, 6, VF, VG, VA, ER, ET, EN, 6, VD, VA, VG, EK, EL, EP, 4, VG, VF, VA, VD, 4, VB, VF, VA, VD,
    /* (1, 0, 1, 0, 1, 0, 0, 1) / 12 / 6, 8, 6 / 3199 */ 6, VG, ET, EP, ES, EU, EQ, 8, EP, ET, EK, ER, EQ, EU, VD, VF, 6, EK, ER, EJ, VD, VF, VB,
    /* (0, 1, 1, 0, 1, 0, 0, 1) / -13 / 6, 6, 6, 6, 8 / 3222 */ 6, VD, EK, EQ, EM, EJ, EO, 6, EO, ER, VF, EQ, ES, EU, 6, ES, EP, VG, ER, EN, ET, 6, VA, EJ, EN, EL, EK, EP, 8, EQ, ES, EK, EP, EO, ER, EJ, EN,
    /* (1, 1, 1, 0, 1, 0, 0, 1) / -7 / 4, 4, 4 / 3259 */ 4, EP, VG, ET, ES, 4, EO, EU, ER, VF, 4, EK, EQ, EM, VD,
    /* (0, 0, 0, 1, 1, 0, 0, 1) / 6 / 8, 6, 5, 4 / 3274 */ 8, EK, EM, ES, EU, VA, VB, ER, VF, 6, EK, VC, VA, ES, VG, ER, 5, VC, VG, ER, VA, EN, 4, VG, EN, ER, ET,
    /* (1, 0, 0, 1, 1, 0, 0, 1) / -10 / 8, 8 / 3301 */ 8, ER, VF, ET, VG, EJ, VB, EL, VC, 8, VG, VF, ES, EU, VC, VB, EK, EM,
    /* (0, 1, 0, 1, 1, 0, 0, 1) / 12 / 6, 8, 6 / 3319 */ 6, VF, EU, EO, ER, ET, EN, 8, EO, EU, EJ, ES, EN, ET, VA, VG, 6, EJ, ES, EK, VA, VG, VC,
    /* (1, 1, 0, 1, 1, 0, 0, 1) / 6 / 6, 4 / 3342 */ 6, VG, ET, ES, VC, EL, EK, 4, VF, EO, ER, EU,
    /* (0, 0, 1, 1, 1, 0, 0, 1) / -12 / 6, 8, 6 / 3354 */ 6, ET, ER, EN, VG, ES, EP, 8, EN, ER, VA, VF, EP, ES, EL, EU, 6, VA, VF, VB, EL, EU, EM,
    /* (1, 0, 1, 1, 1, 0, 0, 1) / -6 / 6, 4 / 3377 */ 6, VB, EJ, EM, VF, ER, EU, 4, EP, ES, ET, VG,
    /* (0, 1, 1, 1, 1, 0, 0, 1) / 7 / 4, 4, 4 / 3389 */ 4, ER, EU, EO, VF, 4, VA, EL, EJ, EN, 4, VG, ES, EP, ET,
    /* (1, 1, 1, 1, 1, 0, 0, 1) / -18 / 4, 4 / 3404 */ 4, EU, VF, EO, ER, 4, EP, ES, ET, VG,
    /* (0, 0, 0, 0, 0, 1, 0, 1) / 2 / 8, 6 / 3414 */ 8, EQ, VD, ES, VC, EO, VB, ER, VA, 6, ES, VC, VG, ER, VA, VE,
    /* (1, 0, 0, 0, 0, 1, 0, 1) / 6 / 8, 6, 5, 4 / 3430 */ 8, ES, EQ, ER, EO, VC, VD, EJ, VB, 6, ES, VG, VC, ER, VE, EJ, 5, VG, VE, EJ, VC, EL, 4, VE, EL, EJ, EN,
    /* (0, 1, 0, 0, 0, 1, 0, 1) / 5 / 6, 6, 6 / 3457 */ 6, ES, EJ, ER, VG, VA, VE, 6, VD, EM, EQ, VC, VA, VG, 6, EM, EJ, VA, EQ, ES, VG,
    /* (1, 1, 0, 0, 0, 1, 0, 1) / 11 / 4, 5, 4, 5, 5 / 3478 */ 4, EQ, ES, ER, EL, 5, ES, VG, VE, ER, EL, 4, EL, ER, VE, EN, 5, VC, EQ, ES, VG, EL, 5, VC, EL, EM, VD, EQ,
    /* (0, 0, 1, 0, 0, 1, 0, 1) / -6 / 8, 6, 5, 4 / 3506 */ 8, VA, VB, EK, VD, ER, EO, ES, EQ, 6, ES, VG, EK, ER, VE, VA, 5, VG, VE, VA, EK, EL, 4, EP, VG, EK, EL,
    /* (1, 0, 1, 0, 0, 1, 0, 1) / 10 / 8, 8 / 3533 */ 8, EQ, VD, ES, VG, EO, VB, ER, VE, 8, VG, VD, EP, EK, VE, VB, EN, EJ,
    /* (0, 1, 1, 0, 0, 1, 0, 1) / 12 / 6, 8, 6 / 3551 */ 6, VD, EM, EQ, EK, EL, EP, 8, EQ, EM, ES, EJ, EP, EL, VG, VA, 6, ES, EJ, ER, VG, VA, VE,
    /* (1, 1, 1, 0, 0, 1, 0, 1) / 6 / 6, 4 / 3574 */ 6, VG, ES, EP, VE, ER, EN, 4, VD, EM, EQ, EK,
    /* (0, 0, 0, 1, 0, 1, 0, 1) / -5 / 6, 6, 6 / 3586 */ 6, VE, VC, VG, ER, EK, ES, 6, VA, VC, VE, VB, EM, EO, 6, EO, ER, VE, EM, EK, VC,
    /* (1, 0, 0, 1, 0, 1, 0, 1) / -12 / 6, 8, 6 / 3607 */ 6, EJ, EL, EN, VB, EM, EO, 8, EN, EL, VE, VC, EO, EM, ER, EK, 6, VE, VC, VG, ER, EK, ES,
    /* (0, 1, 0, 1, 0, 1, 0, 1) / 8 / 8 / 3630 */ 8, ER, ES, EJ, EK, VE, VG, VA, VC,
    /* (1, 1, 0, 1, 0, 1, 0, 1) / 5 / 6, 6 / 3639 */ 6, EN, VE, ER, EL, VC, EK, 6, ER, EK, ES, VE, VC, VG,
    /* (0, 0, 1, 1, 0, 1, 0, 1) / -11 / 4, 5, 4, 5, 5 / 3653 */ 4, EL, EO, ES, ER, 5, VE, ER, ES, VG, EL, 4, EP, EL, VG, ES, 5, EO, VA, VE, ER, EL, 5, EL, VA, VB, EM, EO,
    /* (1, 0, 1, 1, 0, 1, 0, 1) / -6 / 6, 4 / 3681 */ 6, VG, ES, EP, VE, ER, EN, 4, EM, EJ, EO, VB,
    /* (0, 1, 1, 1, 0, 1, 0, 1) / -5 / 6, 6 / 3693 */ 6, EL, VA, EJ, EP, VG, ES, 6, VG, VA, VE, ES, EJ, ER,
    /* (1, 1, 1, 1, 0, 1, 0, 1) / -2 / 6 / 3707 */ 6, VG, EP, ES, VE, EN, ER,
    /* (0, 0, 0, 0, 1, 1, 0, 1) / -5 / 6, 6, 6 / 3714 */ 6, VD, VA, VB, EQ, EN, EO, 6, VC, VA, VD, VG, ET, ES, 6, ES, EQ, VD, ET, EN, VA,
    /* (1, 0, 0, 0, 1, 1, 0, 1) / -11 / 4, 5, 4, 5, 5 / 3735 */ 4, EQ, EJ, ET, EL, 5, VC, EL, ET, VG, EQ, 4, ES, EQ, VG, ET, 5, EJ, VD, VC, EL, EQ, 5, EQ, VD, VB, EO, EJ,
    /* (0, 1, 0, 0, 1, 1, 0, 1) / 9 / 6, 6, 6 / 3763 */ 6, EM, EQ, VD, VA, VG, VC, 6, VA, EJ, EM, VG, ES, EQ, 6, EN, EJ, VA, ET, ES, VG,
    /* (1, 1, 0, 0, 1, 1, 0, 1) / -5 / 6, 6 / 3784 */ 6, EQ, VD, EM, ES, VG, ET, 6, VG, VD, VC, ET, EM, EL,
    /* (0, 0, 1, 0, 1, 1, 0, 1) / -12 / 6, 8, 6 / 3798 */ 6, EP, EL, EK, VG, ET, ES, 8, EK, EL, VD, VA, ES, ET, EQ, EN, 6, VD, VA, VB, EQ, EN, EO,
    /* (1, 0, 1, 0, 1, 1, 0, 1) / 6 / 6, 4 / 3821 */ 6, VD, EK, EQ, VB, EJ, EO, 4, VG, ET, EP, ES,
    /* (0, 1, 1, 0, 1, 1, 0, 1) / 7 / 4, 4, 4 / 3833 */ 4, EL, EN, EJ, VA, 4, VD, EQ, EM, EK, 4, VG, ET, ES, EP,
    /* (1, 1, 1, 0, 1, 1, 0, 1) / -18 / 4, 4 / 3848 */ 4, EK, VD, EM, EQ, 4, ET, EP, ES, VG,
    /* (0, 0, 0, 1, 1, 1, 0, 1) / 11 / 4, 5, 4, 5, 5 / 3858 */ 4, ET, EN, EO, EK, 5, EN, VA, VB, EO, EK, 4, EK, EO, VB, EM, 5, VC, ET, EN, VA, EK, 5, VC, EK, ES, VG, ET,
    /* (1, 0, 0, 1, 1, 1, 0, 1) / 6 / 6, 4 / 3886 */ 6, VC, EK, EL, VG, ES, ET, 4, VB, EO, EM, EJ,
    /* (0, 1, 0, 1, 1, 1, 0, 1) / -5 / 6, 6 / 3898 */ 6, ET, VG, ES, EN, VA, EJ, 6, VA, VG, VC, EJ, ES, EK,
    /* (1, 1, 0, 1, 1, 1, 0, 1) / 2 / 6 / 3912 */ 6, VG, ES, ET, VC, EK, EL,
    /* (0, 0, 1, 1, 1, 1, 0, 1) / -6 / 6, 4 / 3919 */ 6, VB, EM, EO, VA, EL, EN, 4, ES, ET, EP, VG,
    /* (1, 0, 1, 1, 1, 1, 0, 1) / -19 / 4, 4 / 3931 */ 4, EM, VB, EJ, EO, 4, VG, EP, ET, ES,
    /* (0, 1, 1, 1, 1, 1, 0, 1) / -18 / 4, 4 / 3941 */ 4, EP, VG, ES, ET, 4, EJ, EL, EN, VA,
    /* (1, 1, 1, 1, 1, 1, 0, 1) / 1 / 4 / 3951 */ 4, VG, EP, ET, ES,
    /* (0, 0, 0, 0, 0, 0, 1, 1) / -2 / 8, 6 / 3956 */ 8, EP, VC, ET, VA, EQ, VD, EU, VB, 6, ET, VA, VE, EU, VB, VF,
    /* (1, 0, 0, 0, 0, 0, 1, 1) / 6 / 8, 6, 5, 4 / 3972 */ 8, EQ, EU, EP, ET, VB, VF, EN, VE, 6, EQ, VD, VB, EP, VC, EN, 5, VD, VC, EN, VB, EJ, 4, VC, EJ, EN, EL,
    /* (0, 1, 0, 0, 0, 0, 1, 1) / -6 / 8, 6, 5, 4 / 3999 */ 8, VA, VE, EO, VF, EP, ET, EQ, EU, 6, EQ, VD, EO, EP, VC, VA, 5, VD, VC, VA, EO, EJ, 4, EM, VD, EO, EJ,
    /* (1, 1, 0, 0, 0, 0, 1, 1) / -10 / 8, 8 / 4026 */ 8, EU, VF, EQ, VD, ET, VE, EP, VC, 8, VD, VF, EM, EO, VC, VE, EL, EN,
    /* (0, 0, 1, 0, 0, 0, 1, 1) / -5 / 6, 6, 6 / 4044 */ 6, VF, VA, VE, EU, EL, ET, 6, VB, VA, VF, VD, EK, EQ, 6, EQ, EU, VF, EK, EL, VA,
    /* (1, 0, 1, 0, 0, 0, 1, 1) / -11 / 4, 5, 4, 5, 5 / 4065 */ 4, EU, EN, EK, EJ, 5, VB, EJ, EK, VD, EU, 4, EQ, EU, VD, EK, 5, EN, VF, VB, EJ, EU, 5, EU, VF, VE, ET, EN,
    /* (0, 1, 1, 0, 0, 0, 1, 1) / 12 / 6, 8, 6 / 4093 */ 6, VD, EQ, EK, EM, EO, EJ, 8, EK, EQ, EL, EU, EJ, EO, VA, VF, 6, EL, EU, ET, VA, VF, VE,
    /* (1, 1, 1, 0, 0, 0, 1, 1) / -6 / 6, 4 / 4116 */ 6, VE, ET, EN, VF, EU, EO, 4, EK, EM, EQ, VD,
    /* (0, 0, 0, 1, 0, 0, 1, 1) / -5 / 6, 6, 6 / 4128 */ 6, VB, VE, VF, EM, ET, EU, 6, VA, VE, VB, VC, EP, EK, 6, EK, EM, VB, EP, ET, VE,
    /* (1, 0, 0, 1, 0, 0, 1, 1) / -12 / 6, 8, 6 / 4149 */ 6, EL, EN, EJ, VC, EP, EK, 8, EJ, EN, VB, VE, EK, EP, EM, ET, 6, VB, VE, VF, EM, ET, EU,
    /* (0, 1, 0, 1, 0, 0, 1, 1) / 11 / 4, 5, 4, 5, 5 / 4172 */ 4, EO, EJ, EK, ET, 5, EJ, VA, VC, EK, ET, 4, ET, EK, VC, EP, 5, VE, EO, EJ, VA, ET, 5, VE, ET, EU, VF, EO,
    /* (1, 1, 0, 1, 0, 0, 1, 1) / -6 / 6, 4 / 4200 */ 6, VF, EO, EU, VE, EN, ET, 4, EK, EP, EL, VC,
    /* (0, 0, 1, 1, 0, 0, 1, 1) / -8 / 8 / 4212 */ 8, VE, VF, VA, VB, ET, EU, EL, EM,
    /* (1, 0, 1, 1, 0, 0, 1, 1) / 5 / 6, 6 / 4221 */ 6, EJ, VB, EM, EN, VE, ET, 6, EM, ET, EU, VB, VE, VF,
    /* (0, 1, 1, 1, 0, 0, 1, 1) / -5 / 6, 6 / 4235 */ 6, EO, VF, EU, EJ, VA, EL, 6, VA, VF, VE, EL, EU, ET,
    /* (1, 1, 1, 1, 0, 0, 1, 1) / -2 / 6 / 4249 */ 6, VE, EN, ET, VF, EO, EU,
    /* (0, 0, 0, 0, 1, 0, 1, 1) / -5 / 6, 6, 6 / 4256 */ 6, VA, VD, VC, EN, EQ, EP, 6, VB, VD, VA, VF, EU, ER, 6, ER, EN, VA, EU, EQ, VD,
    /* (1, 0, 0, 0, 1, 0, 1, 1) / 11 / 4, 5, 4, 5, 5 / 4277 */ 4, EU, EQ, EP, EJ, 5, EQ, VD, VC, EP, EJ, 4, EJ, EP, VC, EL, 5, VB, EU, EQ, VD, EJ, 5, VB, EJ, ER, VF, EU,
    /* (0, 1, 0, 0, 1, 0, 1, 1) / -12 / 6, 8, 6 / 4305 */ 6, EO, EM, EJ, VF, EU, ER, 8, EJ, EM, VA, VD, ER, EU, EN, EQ, 6, VA, VD, VC, EN, EQ, EP,
    /* (1, 1, 0, 0, 1, 0, 1, 1) / 6 / 6, 4 / 4328 */ 6, VD, EQ, EM, VC, EP, EL, 4, VF, ER, EU, EO,
    /* (0, 0, 1, 0, 1, 0, 1, 1) / -9 / 6, 6, 6 / 4340 */ 6, VA, VF, VB, EK, EQ, VD, 6, VF, EU, EQ, VA, EL, EK, 6, ER, EU, VF, EN, EL, VA,
    /* (1, 0, 1, 0, 1, 0, 1, 1) / -5 / 6, 6 / 4361 */ 6, EU, VF, ER, EQ, VD, EK, 6, VD, VF, VB, EK, ER, EJ,
    /* (0, 1, 1, 0, 1, 0, 1, 1) / -7 / 4, 4, 4 / 4375 */ 4, EN, VA, EL, EJ, 4, EQ, EM, EK, VD, 4, ER, EO, EU, VF,
    /* (1, 1, 1, 0, 1, 0, 1, 1) / 18 / 4, 4 / 4390 */ 4, VF, EO, ER, EU, 4, EQ, VD, EM, EK,
    /* (0, 0, 0, 1, 1, 0, 1, 1) / -11 / 4, 5, 4, 5, 5 / 4400 */ 4, EM, ER, EP, EN, 5, VA, EN, EP, VC, EM, 4, EK, EM, VC, EP, 5, ER, VB, VA, EN, EM, 5, EM, VB, VF, EU, ER,
    /* (1, 0, 0, 1, 1, 0, 1, 1) / -6 / 6, 4 / 4428 */ 6, VF, EU, ER, VB, EM, EJ, 4, EP, EL, EK, VC,
    /* (0, 1, 0, 1, 1, 0, 1, 1) / 6 / 6, 4 / 4440 */ 6, VA, EJ, EN, VC, EK, EP, 4, VF, EU, EO, ER,
    /* (1, 1, 0, 1, 1, 0, 1, 1) / 19 / 4, 4 / 4452 */ 4, VF, EU, EO, ER, 4, EL, EP, EK, VC,
    /* (0, 0, 1, 1, 1, 0, 1, 1) / 5 / 6, 6 / 4462 */ 6, EN, VA, EL, ER, VF, EU, 6, EL, EU, EM, VA, VF, VB,
    /* (1, 0, 1, 1, 1, 0, 1, 1) / -2 / 6 / 4476 */ 6, VF, ER, EU, VB, EJ, EM,
    /* (0, 1, 1, 1, 1, 0, 1, 1) / -18 / 4, 4 / 4483 */ 4, EJ, VA, EL, EN, 4, EU, EO, ER, VF,
    /* (1, 1, 1, 1, 1, 0, 1, 1) / 1 / 4 / 4493 */ 4, VF, EU, ER, EO,
    /* (0, 0, 0, 0, 0, 1, 1, 1) / 5 / 6, 6, 6 / 4498 */ 6, EO, EP, EQ, VB, VC, VD, 6, VE, ET, ER, VA, VC, VB, 6, ET, EP, VC, ER, EO, VB,
    /* (1, 0, 0, 0, 0, 1, 1, 1) / -12 / 6, 8, 6 / 4519 */ 6, EN, EJ, EL, VE, ER, ET, 8, EL, EJ, VC, VB, ET, ER, EP, EO, 6, VC, VB, VD, EP, EO, EQ,
    /* (0, 1, 0, 0, 0, 1, 1, 1) / -11 / 4, 5, 4, 5, 5 / 4542 */ 4, EJ, ET, EQ, EP, 5, VC, EP, EQ, VD, EJ, 4, EM, EJ, VD, EQ, 5, ET, VA, VC, EP, EJ, 5, EJ, VA, VE, ER, ET,
    /* (1, 1, 0, 0, 0, 1, 1, 1) / -6 / 6, 4 / 4570 */ 6, VD, EQ, EM, VC, EP, EL, 4, ER, EN, ET, VE,
    /* (0, 0, 1, 0, 0, 1, 1, 1) / 11 / 4, 5, 4, 5, 5 / 4582 */ 4, EK, EL, ET, EO, 5, EL, VA, VE, ET, EO, 4, EO, ET, VE, ER, 5, VB, EK, EL, VA, EO, 5, VB, EO, EQ, VD, EK,
    /* (1, 0, 1, 0, 0, 1, 1, 1) / 6 / 6, 4 / 4610 */ 6, VB, EO, EJ, VD, EQ, EK, 4, VE, ET, ER, EN,
    /* (0, 1, 1, 0, 0, 1, 1, 1) / 6 / 6, 4 / 4622 */ 6, VA, EL, EJ, VE, ET, ER, 4, VD, EQ, EK, EM,
    /* (1, 1, 1, 0, 0, 1, 1, 1) / 19 / 4, 4 / 4634 */ 4, VE, EN, ET, ER, 4, EQ, EM, EK, VD,
    /* (0, 0, 0, 1, 0, 1, 1, 1) / -9 / 6, 6, 6 / 4644 */ 6, VC, VE, VA, EM, EO, VB, 6, VE, ER, EO, VC, EK, EM, 6, ET, ER, VE, EP, EK, VC,
    /* (1, 0, 0, 1, 0, 1, 1, 1) / -7 / 4, 4, 4 / 4665 */ 4, EM, VB, EO, EJ, 4, ET, EN, ER, VE, 4, EK, EL, EP, VC,
    /* (0, 1, 0, 1, 0, 1, 1, 1) / 5 / 6, 6 / 4680 */ 6, EP, VC, EK, ET, VE, ER, 6, EK, ER, EJ, VC, VE, VA,
    /* (1, 1, 0, 1, 0, 1, 1, 1) / 18 / 4, 4 / 4694 */ 4, VE, ET, ER, EN, 4, EL, VC, EP, EK,
    /* (0, 0, 1, 1, 0, 1, 1, 1) / 5 / 6, 6 / 4704 */ 6, ER, VE, ET, EO, VB, EM, 6, ET, EM, EL, VE, VB, VA,
    /* (1, 0, 1, 1, 0, 1, 1, 1) / -18 / 4, 4 / 4718 */ 4, EN, VE, ET, ER, 4, EM, EJ, EO, VB,
    /* (0, 1, 1, 1, 0, 1, 1, 1) / -2 / 6 / 4728 */ 6, VA, EJ, EL, VE, ER, ET,
    /* (1, 1, 1, 1, 0, 1, 1, 1) / -1 / 4 / 4735 */ 4, ET, EN, ER, VE,
    /* (0, 0, 0, 0, 1, 1, 1, 1) / -8 / 8 / 4740 */ 8, VC, VA, VD, VB, EP, EN, EQ, EO,
    /* (1, 0, 0, 0, 1, 1, 1, 1) / 5 / 6, 6 / 4749 */ 6, EL, VC, EP, EJ, VB, EO, 6, EP, EO, EQ, VC, VB, VD,
    /* (0, 1, 0, 0, 1, 1, 1, 1) / 5 / 6, 6 / 4763 */ 6, EJ, VA, EN, EM, VD, EQ, 6, EN, EQ, EP, VA, VD, VC,
    /* (1, 1, 0, 0, 1, 1, 1, 1) / 2 / 6 / 4777 */ 6, VD, EM, EQ, VC, EL, EP,
    /* (0, 0, 1, 0, 1, 1, 1, 1) / 5 / 6, 6 / 4784 */ 6, EK, VD, EQ, EL, VA, EN, 6, EQ, EN, EO, VD, VA, VB,
    /* (1, 0, 1, 0, 1, 1, 1, 1) / 2 / 6 / 4798 */ 6, VB, EJ, EO, VD, EK, EQ,
    /* (0, 1, 1, 0, 1, 1, 1, 1) / 18 / 4, 4 / 4805 */ 4, VD, EM, EQ, EK, 4, EL, VA, EJ, EN,
    /* (1, 1, 1, 0, 1, 1, 1, 1) / -1 / 4 / 4815 */ 4, EQ, EM, EK, VD,
    /* (0, 0, 0, 1, 1, 1, 1, 1) / -5 / 6, 6 / 4820 */ 6, EM, VB, EO, EK, VC, EP, 6, VC, VB, VA, EP, EO, EN,
    /* (1, 0, 0, 1, 1, 1, 1, 1) / -18 / 4, 4 / 4834 */ 4, EK, VC, EP, EL, 4, EO, EM, EJ, VB,
    /* (0, 1, 0, 1, 1, 1, 1, 1) / -2 / 6 / 4844 */ 6, VA, EN, EJ, VC, EP, EK,
    /* (1, 1, 0, 1, 1, 1, 1, 1) / -1 / 4 / 4851 */ 4, EL, EP, EK, VC,
    /* (0, 0, 1, 1, 1, 1, 1, 1) / 2 / 6 / 4856 */ 6, VB, EO, EM, VA, EN, EL,
    /* (1, 0, 1, 1, 1, 1, 1, 1) / 1 / 4 / 4863 */ 4, VB, EJ, EM, EO,
    /* (0, 1, 1, 1, 1, 1, 1, 1) / 1 / 4 / 4868 */ 4, VA, EL, EJ, EN,
    /* (1, 1, 1, 1, 1, 1, 1, 1) / 21 /  / 4873 */  /* no elements */
    /* (0, 1, 1, 0, 0, 0, 0, 0) / 3 / 6, 6, 6, 6 / 4873 */ 6, VA, EJ, EL, VE, VF, VG, 6, VF, EO, EJ, VG, EP, EL, 6, VF, EO, EM, VG, EP, EK, 6, VD, EK, EM, VH, VG, VF,
    /* (1, 0, 0, 1, 0, 0, 0, 0) / -3 / 6, 6, 6, 6 / 4901 */ 6, VF, VE, VH, VB, EJ, EM, 6, VH, EQ, EM, VE, EN, EJ, 6, VH, EQ, EK, VE, EN, EL, 6, VG, VH, VE, VC, EK, EL,
    /* (0, 1, 0, 0, 1, 0, 0, 0) / 3 / 6, 6, 6, 6 / 4929 */ 6, VA, EN, EJ, VC, VG, VD, 6, VG, ET, EN, VD, EM, EJ, 6, VG, ET, ER, VD, EM, EO, 6, VF, EO, ER, VH, VD, VG,
    /* (0, 0, 1, 0, 1, 0, 0, 0) / -3 / 6, 6, 6, 6 / 4957 */ 6, VB, VF, VD, VA, EN, EL, 6, VD, EK, EL, VF, ER, EN, 6, VD, EK, EP, VF, ER, ET, 6, VH, VD, VF, VG, EP, ET,
    /* (1, 0, 0, 0, 0, 1, 0, 0) / -3 / 6, 6, 6, 6 / 4985 */ 6, VD, VH, VC, VB, EO, EJ, 6, VC, EL, EJ, VH, EU, EO, 6, VC, EL, EN, VH, EU, ER, 6, VG, VC, VH, VE, EN, ER,
    /* (0, 0, 0, 1, 0, 1, 0, 0) / -3 / 6, 6, 6, 6 / 5013 */ 6, VG, VE, VC, VH, EU, EQ, 6, VC, EK, EQ, VE, ER, EU, 6, VC, EK, EM, VE, ER, EO, 6, VA, VC, VE, VB, EM, EO,
    /* (1, 0, 0, 0, 0, 0, 1, 0) / 3 / 6, 6, 6, 6 / 5041 */ 6, VE, EN, ET, VF, VB, VH, 6, VB, EJ, EN, VH, ES, ET, 6, VB, EJ, EL, VH, ES, EP, 6, VC, EP, EL, VD, VH, VB,
    /* (0, 0, 0, 1, 0, 0, 1, 0) / -3 / 6, 6, 6, 6 / 5069 */ 6, VA, VE, VB, VC, EP, EK, 6, VB, EM, EK, VE, ET, EP, 6, VB, EM, EQ, VE, ET, ES, 6, VF, VB, VE, VH, EQ, ES,
    /* (0, 0, 0, 0, 0, 1, 1, 0) / 3 / 6, 6, 6, 6 / 5097 */ 6, VH, EU, ES, VD, VB, VC, 6, VB, EO, EU, VC, EP, ES, 6, VB, EO, ER, VC, EP, ET, 6, VE, ET, ER, VA, VC, VB,
    /* (1, 1, 1, 1, 0, 1, 1, 0) / 18 / 4, 6, 4 / 5125 */ 4, VE, EN, ER, ET, 6, EN, ER, ET, EQ, EU, ES, 4, VH, EQ, EU, ES,
    /* (1, 1, 0, 1, 1, 1, 1, 0) / 18 / 4, 6, 4 / 5142 */ 4, VC, EL, EP, EK, 6, EL, EP, EK, EU, ES, EQ, 4, VH, EU, ES, EQ,
    /* (1, 0, 1, 1, 1, 1, 1, 0) / -18 / 4, 6, 4 / 5159 */ 4, EM, VB, EO, EJ, 6, ES, EU, EQ, EJ, EO, EM, 4, EQ, VH, EU, ES,
    /* (0, 1, 0, 0, 0, 0, 0, 1) / 3 / 6, 6, 6, 6 / 5176 */ 6, VF, EU, EO, VE, VG, VA, 6, VG, ES, EU, VA, EJ, EO, 6, VG, ES, EQ, VA, EJ, EM, 6, VD, EM, EQ, VC, VA, VG,
    /* (0, 0, 1, 0, 0, 0, 0, 1) / -3 / 6, 6, 6, 6 / 5204 */ 6, VE, VF, VA, VG, ES, EP, 6, VA, EL, EP, VF, EU, ES, 6, VA, EL, EK, VF, EU, EQ, 6, VB, VA, VF, VD, EK, EQ,
    /* (0, 0, 0, 0, 1, 0, 0, 1) / -3 / 6, 6, 6, 6 / 5232 */ 6, VC, VA, VD, VG, ET, ES, 6, VD, EQ, ES, VA, EN, ET, 6, VD, EQ, EU, VA, EN, ER, 6, VB, VD, VA, VF, EU, ER,
    /* (1, 1, 1, 1, 1, 0, 0, 1) / -18 / 4, 6, 4 / 5260 */ 4, EU, VF, ER, EO, 6, EP, ET, ES, EO, ER, EU, 4, ES, VG, ET, EP,
    /* (1, 1, 1, 0, 1, 1, 0, 1) / -18 / 4, 6, 4 / 5277 */ 4, EK, VD, EQ, EM, 6, ET, ES, EP, EM, EQ, EK, 4, EP, VG, ES, ET,
    /* (0, 1, 1, 1, 1, 1, 0, 1) / -18 / 4, 6, 4 / 5294 */ 4, EP, VG, ET, ES, 6, EJ, EN, EL, ES, ET, EP, 4, EL, VA, EN, EJ,
    /* (1, 1, 1, 0, 1, 0, 1, 1) / 18 / 4, 6, 4 / 5311 */ 4, VF, ER, EO, EU, 6, ER, EO, EU, EK, EM, EQ, 4, VD, EK, EM, EQ,
    /* (0, 1, 1, 1, 1, 0, 1, 1) / -18 / 4, 6, 4 / 5328 */ 4, EJ, VA, EN, EL, 6, EU, ER, EO, EL, EN, EJ, 4, EO, VF, ER, EU,
    /* (1, 1, 0, 1, 0, 1, 1, 1) / 18 / 4, 6, 4 / 5345 */ 4, VE, ER, ET, EN, 6, ER, ET, EN, EK, EP, EL, 4, VC, EK, EP, EL,
    /* (1, 0, 1, 1, 0, 1, 1, 1) / -18 / 4, 6, 4 / 5362 */ 4, EN, VE, ER, ET, 6, EM, EO, EJ, ET, ER, EN, 4, EJ, VB, EO, EM,
    /* (0, 1, 1, 0, 1, 1, 1, 1) / 18 / 4, 6, 4 / 5379 */ 4, VD, EQ, EM, EK, 6, EQ, EM, EK, EN, EJ, EL, 4, VA, EN, EJ, EL,
    /* (1, 0, 0, 1, 1, 1, 1, 1) / -18 / 4, 6, 4 / 5396 */ 4, EK, VC, EL, EP, 6, EO, EJ, EM, EP, EL, EK, 4, EM, VB, EJ, EO,
  };


  const short table_cube3d_codim_1[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0, 0, 0, 0, 0, 0) / 0 /  / 0 */  /* no elements */
    /* (1, 0, 0, 0, 0, 0, 0, 0) / 1 / 3 / 0 */ 3, EN, EJ, EL,
    /* (0, 1, 0, 0, 0, 0, 0, 0) / -1 / 3 / 4 */ 3, EJ, EO, EM,
    /* (1, 1, 0, 0, 0, 0, 0, 0) / 2 / 4 / 8 */ 4, EL, EM, EN, EO,
    /* (0, 0, 1, 0, 0, 0, 0, 0) / -1 / 3 / 13 */ 3, EP, EL, EK,
    /* (1, 0, 1, 0, 0, 0, 0, 0) / -2 / 4 / 17 */ 4, EN, EP, EJ, EK,
    /* (0, 1, 1, 0, 0, 0, 0, 0) / 3 / 3, 3 / 22 */ 3, EO, EJ, EM, 3, EK, EL, EP,
    /* (1, 1, 1, 0, 0, 0, 0, 0) / 5 / 4, 3 / 30 */ 4, EM, EK, EO, EP, 3, EO, EP, EN,
    /* (0, 0, 0, 1, 0, 0, 0, 0) / 1 / 3 / 39 */ 3, EK, EM, EQ,
    /* (1, 0, 0, 1, 0, 0, 0, 0) / -3 / 3, 3 / 43 */ 3, EL, EJ, EN, 3, EQ, EM, EK,
    /* (0, 1, 0, 1, 0, 0, 0, 0) / 2 / 4 / 51 */ 4, EQ, EO, EK, EJ,
    /* (1, 1, 0, 1, 0, 0, 0, 0) / -5 / 4, 3 / 56 */ 4, EK, EL, EQ, EN, 3, EO, EQ, EN,
    /* (0, 0, 1, 1, 0, 0, 0, 0) / 2 / 4 / 65 */ 4, EP, EQ, EL, EM,
    /* (1, 0, 1, 1, 0, 0, 0, 0) / 5 / 4, 3 / 70 */ 4, EJ, EM, EN, EQ, 3, EN, EQ, EP,
    /* (0, 1, 1, 1, 0, 0, 0, 0) / -5 / 4, 3 / 79 */ 4, EL, EJ, EP, EO, 3, EQ, EP, EO,
    /* (1, 1, 1, 1, 0, 0, 0, 0) / 8 / 4 / 88 */ 4, EN, EO, EP, EQ,
    /* (0, 0, 0, 0, 1, 0, 0, 0) / 1 / 3 / 93 */ 3, ER, EN, ET,
    /* (1, 0, 0, 0, 1, 0, 0, 0) / 2 / 4 / 97 */ 4, ET, EL, ER, EJ,
    /* (0, 1, 0, 0, 1, 0, 0, 0) / 3 / 3, 3 / 102 */ 3, ET, EN, ER, 3, EO, EJ, EM,
    /* (1, 1, 0, 0, 1, 0, 0, 0) / 5 / 4, 3 / 110 */ 4, ER, EO, ET, EM, 3, ET, EM, EL,
    /* (0, 0, 1, 0, 1, 0, 0, 0) / -3 / 3, 3 / 119 */ 3, ET, EN, ER, 3, EK, EL, EP,
    /* (1, 0, 1, 0, 1, 0, 0, 0) / -5 / 4, 3 / 127 */ 4, EP, ET, EK, ER, 3, EJ, EK, ER,
    /* (0, 1, 1, 0, 1, 0, 0, 0) / 7 / 3, 3 / 136 */ 3, EJ, EM, EO, 3, EL, EK, EP,
    /* (1, 1, 1, 0, 1, 0, 0, 0) / 9 / 4, 4 / 144 */ 4, EK, EM, EP, EO, 4, EP, EO, ET, ER,
    /* (0, 0, 0, 1, 1, 0, 0, 0) / 4 / 3, 3 / 154 */ 3, EN, ET, ER, 3, EM, EK, EQ,
    /* (1, 0, 0, 1, 1, 0, 0, 0) / 6 / 4, 3 / 162 */ 4, ER, ET, EJ, EL, 3, EK, EQ, EM,
    /* (0, 1, 0, 1, 1, 0, 0, 0) / -6 / 4, 3 / 171 */ 4, EK, EQ, EJ, EO, 3, ER, ET, EN,
    /* (1, 1, 0, 1, 1, 0, 0, 0) / 11 / 3, 3, 3, 3 / 180 */ 3, ET, ER, EL, 3, ER, EQ, EL, 3, ER, EQ, EO, 3, EQ, EL, EK,
    /* (0, 0, 1, 1, 1, 0, 0, 0) / -6 / 4, 3 / 196 */ 4, EQ, EM, EP, EL, 3, EN, ER, ET,
    /* (1, 0, 1, 1, 1, 0, 0, 0) / -11 / 3, 3, 3, 3 / 205 */ 3, EP, EM, EQ, 3, EP, ER, EM, 3, EJ, ER, EM, 3, ET, EP, ER,
    /* (0, 1, 1, 1, 1, 0, 0, 0) / 12 / 4, 3 / 221 */ 4, EJ, EL, EO, EP, 3, EN, ER, ET,
    /* (1, 1, 1, 1, 1, 0, 0, 0) / -5 / 4, 3 / 230 */ 4, ER, ET, EO, EP, 3, EO, EP, EQ,
    /* (0, 0, 0, 0, 0, 1, 0, 0) / 1 / 3 / 239 */ 3, ER, EU, EO,
    /* (1, 0, 0, 0, 0, 1, 0, 0) / -3 / 3, 3 / 243 */ 3, ER, EO, EU, 3, EL, EJ, EN,
    /* (0, 1, 0, 0, 0, 1, 0, 0) / -2 / 4 / 251 */ 4, ER, EJ, EU, EM,
    /* (1, 1, 0, 0, 0, 1, 0, 0) / -5 / 4, 3 / 256 */ 4, EN, ER, EL, EU, 3, EM, EL, EU,
    /* (0, 0, 1, 0, 0, 1, 0, 0) / 4 / 3, 3 / 265 */ 3, ER, EU, EO, 3, EL, EP, EK,
    /* (1, 0, 1, 0, 0, 1, 0, 0) / 6 / 4, 3 / 273 */ 4, EP, EK, EN, EJ, 3, EO, EU, ER,
    /* (0, 1, 1, 0, 0, 1, 0, 0) / -6 / 4, 3 / 282 */ 4, EU, ER, EM, EJ, 3, EL, EP, EK,
    /* (1, 1, 1, 0, 0, 1, 0, 0) / -11 / 3, 3, 3, 3 / 291 */ 3, EM, ER, EU, 3, EM, EP, ER, 3, EN, EP, ER, 3, EK, EM, EP,
    /* (0, 0, 0, 1, 0, 1, 0, 0) / -3 / 3, 3 / 307 */ 3, EO, EU, ER, 3, EK, EQ, EM,
    /* (1, 0, 0, 1, 0, 1, 0, 0) / -7 / 3, 3 / 315 */ 3, EU, ER, EO, 3, EL, EN, EJ,
    /* (0, 1, 0, 1, 0, 1, 0, 0) / -5 / 4, 3 / 323 */ 4, EU, EQ, ER, EK, 3, EJ, ER, EK,
    /* (1, 1, 0, 1, 0, 1, 0, 0) / -9 / 4, 4 / 332 */ 4, ER, EN, EU, EL, 4, EU, EL, EQ, EK,
    /* (0, 0, 1, 1, 0, 1, 0, 0) / 6 / 4, 3 / 342 */ 4, EL, EP, EM, EQ, 3, EU, ER, EO,
    /* (1, 0, 1, 1, 0, 1, 0, 0) / -12 / 4, 3 / 351 */ 4, EM, EJ, EQ, EN, 3, EU, ER, EO,
    /* (0, 1, 1, 1, 0, 1, 0, 0) / 11 / 3, 3, 3, 3 / 360 */ 3, EP, EL, EQ, 3, EL, ER, EQ, 3, EL, ER, EJ, 3, ER, EQ, EU,
    /* (1, 1, 1, 1, 0, 1, 0, 0) / 5 / 4, 3 / 376 */ 4, EU, ER, EQ, EN, 3, EP, EQ, EN,
    /* (0, 0, 0, 0, 1, 1, 0, 0) / -2 / 4 / 385 */ 4, EU, ET, EO, EN,
    /* (1, 0, 0, 0, 1, 1, 0, 0) / -5 / 4, 3 / 390 */ 4, EO, EJ, EU, EL, 3, ET, EU, EL,
    /* (0, 1, 0, 0, 1, 1, 0, 0) / 5 / 4, 3 / 399 */ 4, EJ, EN, EM, ET, 3, EM, ET, EU,
    /* (1, 1, 0, 0, 1, 1, 0, 0) / -8 / 4 / 408 */ 4, EU, EM, ET, EL,
    /* (0, 0, 1, 0, 1, 1, 0, 0) / 6 / 4, 3 / 413 */ 4, EO, EU, EN, ET, 3, EP, EK, EL,
    /* (1, 0, 1, 0, 1, 1, 0, 0) / 11 / 3, 3, 3, 3 / 422 */ 3, EU, EO, ET, 3, EO, EK, ET, 3, EO, EK, EJ, 3, EK, ET, EP,
    /* (0, 1, 1, 0, 1, 1, 0, 0) / 12 / 4, 3 / 438 */ 4, EN, EJ, ET, EM, 3, EL, EP, EK,
    /* (1, 1, 1, 0, 1, 1, 0, 0) / -5 / 4, 3 / 447 */ 4, EP, EK, ET, EM, 3, ET, EM, EU,
    /* (0, 0, 0, 1, 1, 1, 0, 0) / 6 / 4, 3 / 456 */ 4, ET, EN, EU, EO, 3, EM, EK, EQ,
    /* (1, 0, 0, 1, 1, 1, 0, 0) / -12 / 4, 3 / 465 */ 4, EJ, EO, EL, EU, 3, EK, EQ, EM,
    /* (0, 1, 0, 1, 1, 1, 0, 0) / -11 / 3, 3, 3, 3 / 474 */ 3, EJ, EQ, EK, 3, EJ, ET, EQ, 3, EU, ET, EQ, 3, EN, EJ, ET,
    /* (1, 1, 0, 1, 1, 1, 0, 0) / 5 / 4, 3 / 490 */ 4, EK, EQ, EL, EU, 3, ET, EL, EU,
    /* (0, 0, 1, 1, 1, 1, 0, 0) / 10 / 4, 4 / 499 */ 4, EL, EM, EP, EQ, 4, EN, EO, ET, EU,
    /* (1, 0, 1, 1, 1, 1, 0, 0) / -6 / 4, 3 / 509 */ 4, EP, ET, EQ, EU, 3, EJ, EM, EO,
    /* (0, 1, 1, 1, 1, 1, 0, 0) / 6 / 4, 3 / 518 */ 4, EU, EQ, ET, EP, 3, EN, EL, EJ,
    /* (1, 1, 1, 1, 1, 1, 0, 0) / -2 / 4 / 527 */ 4, EQ, EP, EU, ET,
    /* (0, 0, 0, 0, 0, 0, 1, 0) / -1 / 3 / 532 */ 3, EP, ES, ET,
    /* (1, 0, 0, 0, 0, 0, 1, 0) / 3 / 3, 3 / 536 */ 3, EJ, EN, EL, 3, EP, ET, ES,
    /* (0, 1, 0, 0, 0, 0, 1, 0) / -4 / 3, 3 / 544 */ 3, ET, EP, ES, 3, EJ, EM, EO,
    /* (1, 1, 0, 0, 0, 0, 1, 0) / -6 / 4, 3 / 552 */ 4, EM, EO, EL, EN, 3, ET, ES, EP,
    /* (0, 0, 1, 0, 0, 0, 1, 0) / 2 / 4 / 561 */ 4, ES, EK, ET, EL,
    /* (1, 0, 1, 0, 0, 0, 1, 0) / -5 / 4, 3 / 566 */ 4, ET, EN, ES, EJ, 3, EK, ES, EJ,
    /* (0, 1, 1, 0, 0, 0, 1, 0) / 6 / 4, 3 / 575 */ 4, ET, ES, EL, EK, 3, EM, EO, EJ,
    /* (1, 1, 1, 0, 0, 0, 1, 0) / 11 / 3, 3, 3, 3 / 584 */ 3, ES, ET, EK, 3, ET, EO, EK, 3, ET, EO, EN, 3, EO, EK, EM,
    /* (0, 0, 0, 1, 0, 0, 1, 0) / -3 / 3, 3 / 600 */ 3, ES, EP, ET, 3, EM, EK, EQ,
    /* (1, 0, 0, 1, 0, 0, 1, 0) / -7 / 3, 3 / 608 */ 3, EJ, EN, EL, 3, ES, ET, EP,
    /* (0, 1, 0, 1, 0, 0, 1, 0) / 6 / 4, 3 / 616 */ 4, EO, EJ, EQ, EK, 3, EP, ET, ES,
    /* (1, 1, 0, 1, 0, 0, 1, 0) / 12 / 4, 3 / 625 */ 4, EL, EK, EN, EQ, 3, EP, ET, ES,
    /* (0, 0, 1, 1, 0, 0, 1, 0) / -5 / 4, 3 / 634 */ 4, EQ, ES, EM, ET, 3, EL, EM, ET,
    /* (1, 0, 1, 1, 0, 0, 1, 0) / -9 / 4, 4 / 643 */ 4, EN, ET, EJ, ES, 4, EJ, ES, EM, EQ,
    /* (0, 1, 1, 1, 0, 0, 1, 0) / -11 / 3, 3, 3, 3 / 653 */ 3, EQ, EJ, EO, 3, EQ, ET, EJ, 3, EL, ET, EJ, 3, ES, EQ, ET,
    /* (1, 1, 1, 1, 0, 0, 1, 0) / -5 / 4, 3 / 669 */ 4, ET, ES, EN, EQ, 3, EN, EQ, EO,
    /* (0, 0, 0, 0, 1, 0, 1, 0) / -2 / 4 / 678 */ 4, ER, ES, EN, EP,
    /* (1, 0, 0, 0, 1, 0, 1, 0) / 5 / 4, 3 / 683 */ 4, EL, EP, EJ, ES, 3, EJ, ES, ER,
    /* (0, 1, 0, 0, 1, 0, 1, 0) / -6 / 4, 3 / 692 */ 4, ES, EP, ER, EN, 3, EJ, EM, EO,
    /* (1, 1, 0, 0, 1, 0, 1, 0) / -11 / 3, 3, 3, 3 / 701 */ 3, EL, EO, EM, 3, EL, ES, EO, 3, ER, ES, EO, 3, EP, EL, ES,
    /* (0, 0, 1, 0, 1, 0, 1, 0) / 5 / 4, 3 / 717 */ 4, EN, EL, ER, EK, 3, ER, EK, ES,
    /* (1, 0, 1, 0, 1, 0, 1, 0) / 8 / 4 / 726 */ 4, ER, EJ, ES, EK,
    /* (0, 1, 1, 0, 1, 0, 1, 0) / -12 / 4, 3 / 731 */ 4, EL, EN, EK, ER, 3, EM, EO, EJ,
    /* (1, 1, 1, 0, 1, 0, 1, 0) / 5 / 4, 3 / 740 */ 4, EM, EO, EK, ER, 3, ES, EK, ER,
    /* (0, 0, 0, 1, 1, 0, 1, 0) / -6 / 4, 3 / 749 */ 4, EN, ER, EP, ES, 3, EQ, EM, EK,
    /* (1, 0, 0, 1, 1, 0, 1, 0) / -12 / 4, 3 / 758 */ 4, EP, EL, ES, EJ, 3, EQ, EM, EK,
    /* (0, 1, 0, 1, 1, 0, 1, 0) / 10 / 4, 4 / 767 */ 4, EO, EQ, EJ, EK, 4, ER, ES, EN, EP,
    /* (1, 1, 0, 1, 1, 0, 1, 0) / -6 / 4, 3 / 777 */ 4, ER, EO, ES, EQ, 3, EL, EP, EK,
    /* (0, 0, 1, 1, 1, 0, 1, 0) / 11 / 3, 3, 3, 3 / 786 */ 3, ER, EN, ES, 3, EN, EM, ES, 3, EN, EM, EL, 3, EM, ES, EQ,
    /* (1, 0, 1, 1, 1, 0, 1, 0) / 5 / 4, 3 / 802 */ 4, EQ, EM, ES, EJ, 3, ER, ES, EJ,
    /* (0, 1, 1, 1, 1, 0, 1, 0) / 6 / 4, 3 / 811 */ 4, EQ, ES, EO, ER, 3, EJ, EN, EL,
    /* (1, 1, 1, 1, 1, 0, 1, 0) / 2 / 4 / 820 */ 4, ES, ER, EQ, EO,
    /* (0, 0, 0, 0, 0, 1, 1, 0) / 3 / 3, 3 / 825 */ 3, EO, EU, ER, 3, ET, ES, EP,
    /* (1, 0, 0, 0, 0, 1, 1, 0) / 7 / 3, 3 / 833 */ 3, EN, EL, EJ, 3, ET, EP, ES,
    /* (0, 1, 0, 0, 0, 1, 1, 0) / -6 / 4, 3 / 841 */ 4, EJ, EM, ER, EU, 3, ES, EP, ET,
    /* (1, 1, 0, 0, 0, 1, 1, 0) / -12 / 4, 3 / 850 */ 4, ER, EN, EU, EL, 3, ES, EP, ET,
    /* (0, 0, 1, 0, 0, 1, 1, 0) / -6 / 4, 3 / 859 */ 4, EK, EL, ES, ET, 3, ER, EO, EU,
    /* (1, 0, 1, 0, 0, 1, 1, 0) / 12 / 4, 3 / 868 */ 4, EN, ET, EJ, ES, 3, ER, EO, EU,
    /* (0, 1, 1, 0, 0, 1, 1, 0) / 10 / 4, 4 / 877 */ 4, ET, EL, ES, EK, 4, ER, EJ, EU, EM,
    /* (1, 1, 1, 0, 0, 1, 1, 0) / -6 / 4, 3 / 887 */ 4, EM, EK, EU, ES, 3, EN, ER, ET,
    /* (0, 0, 0, 1, 0, 1, 1, 0) / -7 / 3, 3 / 896 */ 3, ER, EO, EU, 3, EK, EM, EQ,
    /* (1, 0, 0, 1, 0, 1, 1, 0) / 13 / 3, 3, 3, 3 / 904 */ 3, EJ, EL, EN, 3, EK, EM, EQ, 3, ER, EU, EO, 3, EP, ET, ES,
    /* (0, 1, 0, 1, 0, 1, 1, 0) / -12 / 4, 3 / 920 */ 4, EQ, EU, EK, ER, 3, EP, ET, ES,
    /* (1, 1, 0, 1, 0, 1, 1, 0) / -7 / 3, 3, 3 / 929 */ 3, EK, EP, EL, 3, ES, EQ, EU, 3, EN, ER, ET,
    /* (0, 0, 1, 1, 0, 1, 1, 0) / -12 / 4, 3 / 941 */ 4, ES, EQ, ET, EM, 3, ER, EO, EU,
    /* (1, 0, 1, 1, 0, 1, 1, 0) / -7 / 3, 3, 3 / 950 */ 3, EQ, EU, ES, 3, EO, EM, EJ, 3, ET, EN, ER,
    /* (0, 1, 1, 1, 0, 1, 1, 0) / -6 / 4, 3 / 962 */ 4, EL, EJ, ET, ER, 3, EQ, ES, EU,
    /* (1, 1, 1, 1, 0, 1, 1, 0) / 18 / 3, 3 / 971 */ 3, EN, ET, ER, 3, ES, EU, EQ,
    /* (0, 0, 0, 0, 1, 1, 1, 0) / -5 / 4, 3 / 979 */ 4, ES, EU, EP, EO, 3, EN, EP, EO,
    /* (1, 0, 0, 0, 1, 1, 1, 0) / 9 / 4, 4 / 988 */ 4, EP, EL, ES, EJ, 4, ES, EJ, EU, EO,
    /* (0, 1, 0, 0, 1, 1, 1, 0) / 11 / 3, 3, 3, 3 / 998 */ 3, EM, EJ, EU, 3, EJ, EP, EU, 3, EJ, EP, EN, 3, EP, EU, ES,
    /* (1, 1, 0, 0, 1, 1, 1, 0) / 5 / 4, 3 / 1014 */ 4, ES, EP, EU, EL, 3, EM, EU, EL,
    /* (0, 0, 1, 0, 1, 1, 1, 0) / -11 / 3, 3, 3, 3 / 1023 */ 3, ES, EL, EK, 3, ES, EO, EL, 3, EN, EO, EL, 3, EU, ES, EO,
    /* (1, 0, 1, 0, 1, 1, 1, 0) / -5 / 4, 3 / 1039 */ 4, EO, EU, EJ, ES, 3, EJ, ES, EK,
    /* (0, 1, 1, 0, 1, 1, 1, 0) / -6 / 4, 3 / 1048 */ 4, ES, EU, EK, EM, 3, EN, EL, EJ,
    /* (1, 1, 1, 0, 1, 1, 1, 0) / -2 / 4 / 1057 */ 4, EK, ES, EM, EU,
    /* (0, 0, 0, 1, 1, 1, 1, 0) / 12 / 4, 3 / 1062 */ 4, EU, ES, EO, EP, 3, EQ, EM, EK,
    /* (1, 0, 0, 1, 1, 1, 1, 0) / 7 / 3, 3, 3 / 1071 */ 3, ES, EQ, EU, 3, EJ, EO, EM, 3, EK, EL, EP,
    /* (0, 1, 0, 1, 1, 1, 1, 0) / -6 / 4, 3 / 1083 */ 4, EJ, EN, EK, EP, 3, EU, EQ, ES,
    /* (1, 1, 0, 1, 1, 1, 1, 0) / 18 / 3, 3 / 1092 */ 3, EL, EK, EP, 3, EQ, ES, EU,
    /* (0, 0, 1, 1, 1, 1, 1, 0) / 6 / 4, 3 / 1100 */ 4, EN, EL, EO, EM, 3, EU, EQ, ES,
    /* (1, 0, 1, 1, 1, 1, 1, 0) / -18 / 3, 3 / 1109 */ 3, EO, EM, EJ, 3, ES, EU, EQ,
    /* (0, 1, 1, 1, 1, 1, 1, 0) / 19 / 3, 3 / 1117 */ 3, EJ, EL, EN, 3, EQ, ES, EU,
    /* (1, 1, 1, 1, 1, 1, 1, 0) / -1 / 3 / 1125 */ 3, ES, EQ, EU,
    /* (0, 0, 0, 0, 0, 0, 0, 1) / -1 / 3 / 1129 */ 3, EQ, EU, ES,
    /* (1, 0, 0, 0, 0, 0, 0, 1) / -4 / 3, 3 / 1133 */ 3, EU, ES, EQ, 3, EN, EL, EJ,
    /* (0, 1, 0, 0, 0, 0, 0, 1) / 3 / 3, 3 / 1141 */ 3, ES, EU, EQ, 3, EM, EO, EJ,
    /* (1, 1, 0, 0, 0, 0, 0, 1) / -6 / 4, 3 / 1149 */ 4, EN, EL, EO, EM, 3, EQ, ES, EU,
    /* (0, 0, 1, 0, 0, 0, 0, 1) / -3 / 3, 3 / 1158 */ 3, EQ, ES, EU, 3, EL, EP, EK,
    /* (1, 0, 1, 0, 0, 0, 0, 1) / -6 / 4, 3 / 1166 */ 4, EJ, EN, EK, EP, 3, ES, EU, EQ,
    /* (0, 1, 1, 0, 0, 0, 0, 1) / 7 / 3, 3 / 1175 */ 3, EM, EO, EJ, 3, EQ, EU, ES,
    /* (1, 1, 1, 0, 0, 0, 0, 1) / -12 / 4, 3 / 1183 */ 4, EK, EM, EP, EO, 3, ES, EU, EQ,
    /* (0, 0, 0, 1, 0, 0, 0, 1) / 2 / 4 / 1192 */ 4, EK, ES, EM, EU,
    /* (1, 0, 0, 1, 0, 0, 0, 1) / -6 / 4, 3 / 1197 */ 4, ES, EU, EK, EM, 3, EJ, EN, EL,
    /* (0, 1, 0, 1, 0, 0, 0, 1) / 5 / 4, 3 / 1206 */ 4, EO, EU, EJ, ES, 3, EJ, ES, EK,
    /* (1, 1, 0, 1, 0, 0, 0, 1) / -11 / 3, 3, 3, 3 / 1215 */ 3, EK, EU, ES, 3, EK, EN, EU, 3, EO, EN, EU, 3, EL, EK, EN,
    /* (0, 0, 1, 1, 0, 0, 0, 1) / 5 / 4, 3 / 1231 */ 4, ES, EP, EU, EL, 3, EU, EL, EM,
    /* (1, 0, 1, 1, 0, 0, 0, 1) / 11 / 3, 3, 3, 3 / 1240 */ 3, EN, EJ, EP, 3, EJ, EU, EP, 3, EJ, EU, EM, 3, EU, EP, ES,
    /* (0, 1, 1, 1, 0, 0, 0, 1) / 9 / 4, 4 / 1256 */ 4, EU, EO, ES, EJ, 4, ES, EJ, EP, EL,
    /* (1, 1, 1, 1, 0, 0, 0, 1) / 5 / 4, 3 / 1266 */ 4, ES, EU, EP, EO, 3, EN, EP, EO,
    /* (0, 0, 0, 0, 1, 0, 0, 1) / -3 / 3, 3 / 1275 */ 3, ER, ET, EN, 3, EQ, ES, EU,
    /* (1, 0, 0, 0, 1, 0, 0, 1) / -6 / 4, 3 / 1283 */ 4, EL, EJ, ET, ER, 3, EU, EQ, ES,
    /* (0, 1, 0, 0, 1, 0, 0, 1) / 7 / 3, 3 / 1292 */ 3, EU, EQ, ES, 3, EO, EM, EJ,
    /* (1, 1, 0, 0, 1, 0, 0, 1) / 12 / 4, 3 / 1300 */ 4, EO, ER, EM, ET, 3, EU, EQ, ES,
    /* (0, 0, 1, 0, 1, 0, 0, 1) / -7 / 3, 3 / 1309 */ 3, EU, EQ, ES, 3, EL, EK, EP,
    /* (1, 0, 1, 0, 1, 0, 0, 1) / 12 / 4, 3 / 1317 */ 4, ET, EP, ER, EK, 3, ES, EU, EQ,
    /* (0, 1, 1, 0, 1, 0, 0, 1) / -13 / 3, 3, 3, 3 / 1326 */ 3, EM, EJ, EO, 3, ET, ER, EN, 3, EU, ES, EQ, 3, EP, EK, EL,
    /* (1, 1, 1, 0, 1, 0, 0, 1) / -7 / 3, 3, 3 / 1342 */ 3, EP, ES, ET, 3, EQ, EK, EM, 3, ER, EO, EU,
    /* (0, 0, 0, 1, 1, 0, 0, 1) / 6 / 4, 3 / 1354 */ 4, EM, EK, EU, ES, 3, ET, EN, ER,
    /* (1, 0, 0, 1, 1, 0, 0, 1) / -10 / 4, 4 / 1363 */ 4, ER, EJ, ET, EL, 4, EU, EM, ES, EK,
    /* (0, 1, 0, 1, 1, 0, 0, 1) / 12 / 4, 3 / 1373 */ 4, EU, EO, ES, EJ, 3, ER, ET, EN,
    /* (1, 1, 0, 1, 1, 0, 0, 1) / 6 / 4, 3 / 1382 */ 4, EK, EL, ES, ET, 3, EU, ER, EO,
    /* (0, 0, 1, 1, 1, 0, 0, 1) / -12 / 4, 3 / 1391 */ 4, EP, ES, EL, EU, 3, EN, ER, ET,
    /* (1, 0, 1, 1, 1, 0, 0, 1) / -6 / 4, 3 / 1400 */ 4, EJ, EM, ER, EU, 3, EP, ET, ES,
    /* (0, 1, 1, 1, 1, 0, 0, 1) / 7 / 3, 3, 3 / 1409 */ 3, EO, ER, EU, 3, EP, ES, ET, 3, EN, EL, EJ,
    /* (1, 1, 1, 1, 1, 0, 0, 1) / -18 / 3, 3 / 1421 */ 3, ER, EU, EO, 3, EP, ET, ES,
    /* (0, 0, 0, 0, 0, 1, 0, 1) / 2 / 4 / 1429 */ 4, EO, EQ, ER, ES,
    /* (1, 0, 0, 0, 0, 1, 0, 1) / 6 / 4, 3 / 1434 */ 4, EQ, ES, EO, ER, 3, EN, EL, EJ,
    /* (0, 1, 0, 0, 0, 1, 0, 1) / 5 / 4, 3 / 1443 */ 4, EQ, EM, ES, EJ, 3, ES, EJ, ER,
    /* (1, 1, 0, 0, 0, 1, 0, 1) / 11 / 3, 3, 3, 3 / 1452 */ 3, ES, EQ, ER, 3, EQ, EL, ER, 3, EQ, EL, EM, 3, EL, ER, EN,
    /* (0, 0, 1, 0, 0, 1, 0, 1) / -6 / 4, 3 / 1468 */ 4, ER, EO, ES, EQ, 3, EK, EL, EP,
    /* (1, 0, 1, 0, 0, 1, 0, 1) / 10 / 4, 4 / 1477 */ 4, EQ, EO, ES, ER, 4, EK, EJ, EP, EN,
    /* (0, 1, 1, 0, 0, 1, 0, 1) / 12 / 4, 3 / 1487 */ 4, EM, EQ, EJ, ES, 3, EK, EL, EP,
    /* (1, 1, 1, 0, 0, 1, 0, 1) / 6 / 4, 3 / 1496 */ 4, EN, ER, EP, ES, 3, EK, EQ, EM,
    /* (0, 0, 0, 1, 0, 1, 0, 1) / -5 / 4, 3 / 1505 */ 4, EM, EO, EK, ER, 3, ES, EK, ER,
    /* (1, 0, 0, 1, 0, 1, 0, 1) / -12 / 4, 3 / 1514 */ 4, EO, EM, ER, EK, 3, EN, EL, EJ,
    /* (0, 1, 0, 1, 0, 1, 0, 1) / 8 / 4 / 1523 */ 4, ER, ES, EJ, EK,
    /* (1, 1, 0, 1, 0, 1, 0, 1) / 5 / 4, 3 / 1528 */ 4, EN, EL, ER, EK, 3, ES, ER, EK,
    /* (0, 0, 1, 1, 0, 1, 0, 1) / -11 / 3, 3, 3, 3 / 1537 */ 3, ES, EO, ER, 3, ES, EL, EO, 3, EM, EL, EO, 3, EP, ES, EL,
    /* (1, 0, 1, 1, 0, 1, 0, 1) / -6 / 4, 3 / 1553 */ 4, ES, EP, ER, EN, 3, EM, EO, EJ,
    /* (0, 1, 1, 1, 0, 1, 0, 1) / -5 / 4, 3 / 1562 */ 4, EL, EP, EJ, ES, 3, EJ, ES, ER,
    /* (1, 1, 1, 1, 0, 1, 0, 1) / -2 / 4 / 1571 */ 4, ER, ES, EN, EP,
    /* (0, 0, 0, 0, 1, 1, 0, 1) / -5 / 4, 3 / 1576 */ 4, ET, ES, EN, EQ, 3, EO, EN, EQ,
    /* (1, 0, 0, 0, 1, 1, 0, 1) / -11 / 3, 3, 3, 3 / 1585 */ 3, ET, EJ, EL, 3, ET, EQ, EJ, 3, EO, EQ, EJ, 3, ES, ET, EQ,
    /* (0, 1, 0, 0, 1, 1, 0, 1) / 9 / 4, 4 / 1601 */ 4, EM, EQ, EJ, ES, 4, EJ, ES, EN, ET,
    /* (1, 1, 0, 0, 1, 1, 0, 1) / -5 / 4, 3 / 1611 */ 4, EQ, ES, EM, ET, 3, EM, ET, EL,
    /* (0, 0, 1, 0, 1, 1, 0, 1) / -12 / 4, 3 / 1620 */ 4, ES, ET, EQ, EN, 3, EK, EL, EP,
    /* (1, 0, 1, 0, 1, 1, 0, 1) / 6 / 4, 3 / 1629 */ 4, EO, EJ, EQ, EK, 3, ES, EP, ET,
    /* (0, 1, 1, 0, 1, 1, 0, 1) / 7 / 3, 3, 3 / 1638 */ 3, EJ, EL, EN, 3, ES, ET, EP, 3, EK, EQ, EM,
    /* (1, 1, 1, 0, 1, 1, 0, 1) / -18 / 3, 3 / 1650 */ 3, EQ, EK, EM, 3, ET, ES, EP,
    /* (0, 0, 0, 1, 1, 1, 0, 1) / 11 / 3, 3, 3, 3 / 1658 */ 3, EN, ET, EO, 3, ET, EK, EO, 3, ET, EK, ES, 3, EK, EO, EM,
    /* (1, 0, 0, 1, 1, 1, 0, 1) / 6 / 4, 3 / 1674 */ 4, ET, ES, EL, EK, 3, EJ, EM, EO,
    /* (0, 1, 0, 1, 1, 1, 0, 1) / -5 / 4, 3 / 1683 */ 4, ET, EN, ES, EJ, 3, ES, EJ, EK,
    /* (1, 1, 0, 1, 1, 1, 0, 1) / 2 / 4 / 1692 */ 4, EL, ET, EK, ES,
    /* (0, 0, 1, 1, 1, 1, 0, 1) / -6 / 4, 3 / 1697 */ 4, EM, EO, EL, EN, 3, ES, EP, ET,
    /* (1, 0, 1, 1, 1, 1, 0, 1) / -19 / 3, 3 / 1706 */ 3, EM, EJ, EO, 3, ES, EP, ET,
    /* (0, 1, 1, 1, 1, 1, 0, 1) / -18 / 3, 3 / 1714 */ 3, ET, EP, ES, 3, EJ, EN, EL,
    /* (1, 1, 1, 1, 1, 1, 0, 1) / 1 / 3 / 1722 */ 3, ES, ET, EP,
    /* (0, 0, 0, 0, 0, 0, 1, 1) / -2 / 4 / 1726 */ 4, EQ, EP, EU, ET,
    /* (1, 0, 0, 0, 0, 0, 1, 1) / 6 / 4, 3 / 1731 */ 4, EU, EQ, ET, EP, 3, EL, EJ, EN,
    /* (0, 1, 0, 0, 0, 0, 1, 1) / -6 / 4, 3 / 1740 */ 4, EP, ET, EQ, EU, 3, EO, EJ, EM,
    /* (1, 1, 0, 0, 0, 0, 1, 1) / -10 / 4, 4 / 1749 */ 4, EU, ET, EQ, EP, 4, EO, EN, EM, EL,
    /* (0, 0, 1, 0, 0, 0, 1, 1) / -5 / 4, 3 / 1759 */ 4, EK, EQ, EL, EU, 3, ET, EL, EU,
    /* (1, 0, 1, 0, 0, 0, 1, 1) / -11 / 3, 3, 3, 3 / 1768 */ 3, EK, EN, EJ, 3, EK, EU, EN, 3, ET, EU, EN, 3, EQ, EK, EU,
    /* (0, 1, 1, 0, 0, 0, 1, 1) / 12 / 4, 3 / 1784 */ 4, EQ, EK, EU, EL, 3, EM, EO, EJ,
    /* (1, 1, 1, 0, 0, 0, 1, 1) / -6 / 4, 3 / 1793 */ 4, ET, EN, EU, EO, 3, EK, EQ, EM,
    /* (0, 0, 0, 1, 0, 0, 1, 1) / -5 / 4, 3 / 1802 */ 4, EP, EK, ET, EM, 3, EU, ET, EM,
    /* (1, 0, 0, 1, 0, 0, 1, 1) / -12 / 4, 3 / 1811 */ 4, EK, EP, EM, ET, 3, EJ, EN, EL,
    /* (0, 1, 0, 1, 0, 0, 1, 1) / 11 / 3, 3, 3, 3 / 1820 */ 3, EJ, EO, EK, 3, EO, ET, EK, 3, EO, ET, EU, 3, ET, EK, EP,
    /* (1, 1, 0, 1, 0, 0, 1, 1) / -6 / 4, 3 / 1836 */ 4, EO, EU, EN, ET, 3, EK, EL, EP,
    /* (0, 0, 1, 1, 0, 0, 1, 1) / -8 / 4 / 1845 */ 4, EU, ET, EM, EL,
    /* (1, 0, 1, 1, 0, 0, 1, 1) / 5 / 4, 3 / 1850 */ 4, EJ, EN, EM, ET, 3, EU, EM, ET,
    /* (0, 1, 1, 1, 0, 0, 1, 1) / -5 / 4, 3 / 1859 */ 4, EO, EJ, EU, EL, 3, EU, EL, ET,
    /* (1, 1, 1, 1, 0, 0, 1, 1) / -2 / 4 / 1868 */ 4, EU, ET, EO, EN,
    /* (0, 0, 0, 0, 1, 0, 1, 1) / -5 / 4, 3 / 1873 */ 4, EU, ER, EQ, EN, 3, EP, EQ, EN,
    /* (1, 0, 0, 0, 1, 0, 1, 1) / 11 / 3, 3, 3, 3 / 1882 */ 3, EQ, EU, EP, 3, EU, EJ, EP, 3, EU, EJ, ER, 3, EJ, EP, EL,
    /* (0, 1, 0, 0, 1, 0, 1, 1) / -12 / 4, 3 / 1898 */ 4, ER, EU, EN, EQ, 3, EJ, EM, EO,
    /* (1, 1, 0, 0, 1, 0, 1, 1) / 6 / 4, 3 / 1907 */ 4, EL, EP, EM, EQ, 3, EO, EU, ER,
    /* (0, 0, 1, 0, 1, 0, 1, 1) / -9 / 4, 4 / 1916 */ 4, EQ, EK, EU, EL, 4, EU, EL, ER, EN,
    /* (1, 0, 1, 0, 1, 0, 1, 1) / -5 / 4, 3 / 1926 */ 4, EU, EQ, ER, EK, 3, ER, EK, EJ,
    /* (0, 1, 1, 0, 1, 0, 1, 1) / -7 / 3, 3, 3 / 1935 */ 3, EN, EJ, EL, 3, EO, ER, EU, 3, EK, EQ, EM,
    /* (1, 1, 1, 0, 1, 0, 1, 1) / 18 / 3, 3 / 1947 */ 3, ER, EU, EO, 3, EQ, EM, EK,
    /* (0, 0, 0, 1, 1, 0, 1, 1) / -11 / 3, 3, 3, 3 / 1955 */ 3, EP, ER, EN, 3, EP, EM, ER, 3, EU, EM, ER, 3, EK, EP, EM,
    /* (1, 0, 0, 1, 1, 0, 1, 1) / -6 / 4, 3 / 1971 */ 4, EU, ER, EM, EJ, 3, EP, EK, EL,
    /* (0, 1, 0, 1, 1, 0, 1, 1) / 6 / 4, 3 / 1980 */ 4, EP, EK, EN, EJ, 3, ER, EO, EU,
    /* (1, 1, 0, 1, 1, 0, 1, 1) / 19 / 3, 3 / 1989 */ 3, EU, EO, ER, 3, EK, EL, EP,
    /* (0, 0, 1, 1, 1, 0, 1, 1) / 5 / 4, 3 / 1997 */ 4, EN, ER, EL, EU, 3, EM, EL, EU,
    /* (1, 0, 1, 1, 1, 0, 1, 1) / -2 / 4 / 2006 */ 4, EM, EU, EJ, ER,
    /* (0, 1, 1, 1, 1, 0, 1, 1) / -18 / 3, 3 / 2011 */ 3, EN, EJ, EL, 3, EU, ER, EO,
    /* (1, 1, 1, 1, 1, 0, 1, 1) / 1 / 3 / 2019 */ 3, EO, ER, EU,
    /* (0, 0, 0, 0, 0, 1, 1, 1) / 5 / 4, 3 / 2023 */ 4, ER, ET, EO, EP, 3, EO, EP, EQ,
    /* (1, 0, 0, 0, 0, 1, 1, 1) / -12 / 4, 3 / 2032 */ 4, ET, ER, EP, EO, 3, EL, EJ, EN,
    /* (0, 1, 0, 0, 0, 1, 1, 1) / -11 / 3, 3, 3, 3 / 2041 */ 3, EQ, ET, EP, 3, EQ, EJ, ET, 3, ER, EJ, ET, 3, EM, EQ, EJ,
    /* (1, 1, 0, 0, 0, 1, 1, 1) / -6 / 4, 3 / 2057 */ 4, EQ, EM, EP, EL, 3, ER, ET, EN,
    /* (0, 0, 1, 0, 0, 1, 1, 1) / 11 / 3, 3, 3, 3 / 2066 */ 3, EL, EK, ET, 3, EK, EO, ET, 3, EK, EO, EQ, 3, EO, ET, ER,
    /* (1, 0, 1, 0, 0, 1, 1, 1) / 6 / 4, 3 / 2082 */ 4, EK, EQ, EJ, EO, 3, EN, ER, ET,
    /* (0, 1, 1, 0, 0, 1, 1, 1) / 6 / 4, 3 / 2091 */ 4, ER, ET, EJ, EL, 3, EM, EK, EQ,
    /* (1, 1, 1, 0, 0, 1, 1, 1) / 19 / 3, 3 / 2100 */ 3, EN, ET, ER, 3, EK, EQ, EM,
    /* (0, 0, 0, 1, 0, 1, 1, 1) / -9 / 4, 4 / 2108 */ 4, EO, EM, ER, EK, 4, ER, EK, ET, EP,
    /* (1, 0, 0, 1, 0, 1, 1, 1) / -7 / 3, 3, 3 / 2118 */ 3, EM, EJ, EO, 3, EL, EK, EP, 3, ER, ET, EN,
    /* (0, 1, 0, 1, 0, 1, 1, 1) / 5 / 4, 3 / 2130 */ 4, EP, ET, EK, ER, 3, EJ, EK, ER,
    /* (1, 1, 0, 1, 0, 1, 1, 1) / 18 / 3, 3 / 2139 */ 3, ER, EN, ET, 3, EL, EP, EK,
    /* (0, 0, 1, 1, 0, 1, 1, 1) / 5 / 4, 3 / 2147 */ 4, ER, EO, ET, EM, 3, EL, ET, EM,
    /* (1, 0, 1, 1, 0, 1, 1, 1) / -18 / 3, 3 / 2156 */ 3, ER, EN, ET, 3, EM, EO, EJ,
    /* (0, 1, 1, 1, 0, 1, 1, 1) / -2 / 4 / 2164 */ 4, ET, EL, ER, EJ,
    /* (1, 1, 1, 1, 0, 1, 1, 1) / -1 / 3 / 2169 */ 3, ET, ER, EN,
    /* (0, 0, 0, 0, 1, 1, 1, 1) / -8 / 4 / 2173 */ 4, EN, EP, EO, EQ,
    /* (1, 0, 0, 0, 1, 1, 1, 1) / 5 / 4, 3 / 2178 */ 4, EL, EJ, EP, EO, 3, EQ, EP, EO,
    /* (0, 1, 0, 0, 1, 1, 1, 1) / 5 / 4, 3 / 2187 */ 4, EJ, EM, EN, EQ, 3, EP, EN, EQ,
    /* (1, 1, 0, 0, 1, 1, 1, 1) / 2 / 4 / 2196 */ 4, EP, EQ, EL, EM,
    /* (0, 0, 1, 0, 1, 1, 1, 1) / 5 / 4, 3 / 2201 */ 4, EK, EL, EQ, EN, 3, EO, EQ, EN,
    /* (1, 0, 1, 0, 1, 1, 1, 1) / 2 / 4 / 2210 */ 4, EQ, EO, EK, EJ,
    /* (0, 1, 1, 0, 1, 1, 1, 1) / 18 / 3, 3 / 2215 */ 3, EQ, EK, EM, 3, EL, EJ, EN,
    /* (1, 1, 1, 0, 1, 1, 1, 1) / -1 / 3 / 2223 */ 3, EQ, EK, EM,
    /* (0, 0, 0, 1, 1, 1, 1, 1) / -5 / 4, 3 / 2227 */ 4, EM, EK, EO, EP, 3, EO, EP, EN,
    /* (1, 0, 0, 1, 1, 1, 1, 1) / -18 / 3, 3 / 2236 */ 3, EL, EK, EP, 3, EO, EJ, EM,
    /* (0, 1, 0, 1, 1, 1, 1, 1) / -2 / 4 / 2244 */ 4, EK, EJ, EP, EN,
    /* (1, 1, 0, 1, 1, 1, 1, 1) / -1 / 3 / 2249 */ 3, EL, EK, EP,
    /* (0, 0, 1, 1, 1, 1, 1, 1) / 2 / 4 / 2253 */ 4, EL, EM, EN, EO,
    /* (1, 0, 1, 1, 1, 1, 1, 1) / 1 / 3 / 2258 */ 3, EO, EM, EJ,
    /* (0, 1, 1, 1, 1, 1, 1, 1) / 1 / 3 / 2262 */ 3, EN, EJ, EL,
    /* (1, 1, 1, 1, 1, 1, 1, 1) / 21 /  / 2266 */  /* no elements */
    /* (0, 1, 1, 0, 0, 0, 0, 0) / 3 / 4, 4 / 2266 */ 4, EL, EP, EJ, EO, 4, EP, EK, EO, EM,
    /* (1, 0, 0, 1, 0, 0, 0, 0) / -3 / 4, 4 / 2276 */ 4, EQ, EM, EN, EJ, 4, EK, EQ, EL, EN,
    /* (0, 1, 0, 0, 1, 0, 0, 0) / 3 / 4, 4 / 2286 */ 4, EJ, EM, EN, ET, 4, EM, EO, ET, ER,
    /* (0, 0, 1, 0, 1, 0, 0, 0) / -3 / 4, 4 / 2296 */ 4, EK, EL, ER, EN, 4, EP, EK, ET, ER,
    /* (1, 0, 0, 0, 0, 1, 0, 0) / -3 / 4, 4 / 2306 */ 4, EL, EJ, EU, EO, 4, EN, EL, ER, EU,
    /* (0, 0, 0, 1, 0, 1, 0, 0) / -3 / 4, 4 / 2316 */ 4, EK, EQ, ER, EU, 4, EM, EK, EO, ER,
    /* (1, 0, 0, 0, 0, 0, 1, 0) / 3 / 4, 4 / 2326 */ 4, ET, ES, EN, EJ, 4, ES, EP, EJ, EL,
    /* (0, 0, 0, 1, 0, 0, 1, 0) / -3 / 4, 4 / 2336 */ 4, EM, EK, ET, EP, 4, EQ, EM, ES, ET,
    /* (0, 0, 0, 0, 0, 1, 1, 0) / 3 / 4, 4 / 2346 */ 4, ES, EP, EU, EO, 4, EP, ET, EO, ER,
    /* (1, 1, 1, 1, 0, 1, 1, 0) / 18 / 4, 4 / 2356 */ 4, ER, EN, EU, EQ, 4, EN, ET, EQ, ES,
    /* (1, 1, 0, 1, 1, 1, 1, 0) / 18 / 4, 4 / 2366 */ 4, EP, EL, ES, EU, 4, EL, EK, EU, EQ,
    /* (1, 0, 1, 1, 1, 1, 1, 0) / -18 / 4, 4 / 2376 */ 4, EJ, EO, ES, EU, 4, EM, EJ, EQ, ES,
    /* (0, 1, 0, 0, 0, 0, 0, 1) / 3 / 4, 4 / 2386 */ 4, EO, EJ, EU, ES, 4, EJ, EM, ES, EQ,
    /* (0, 0, 1, 0, 0, 0, 0, 1) / -3 / 4, 4 / 2396 */ 4, EL, EP, EU, ES, 4, EK, EL, EQ, EU,
    /* (0, 0, 0, 0, 1, 0, 0, 1) / -3 / 4, 4 / 2406 */ 4, EQ, ES, EN, ET, 4, EU, EQ, ER, EN,
    /* (1, 1, 1, 1, 1, 0, 0, 1) / -18 / 4, 4 / 2416 */ 4, EO, ER, EP, ET, 4, EU, EO, ES, EP,
    /* (1, 1, 1, 0, 1, 1, 0, 1) / -18 / 4, 4 / 2426 */ 4, EM, EQ, ET, ES, 4, EK, EM, EP, ET,
    /* (0, 1, 1, 1, 1, 1, 0, 1) / -18 / 4, 4 / 2436 */ 4, ES, ET, EJ, EN, 4, EP, ES, EL, EJ,
    /* (1, 1, 1, 0, 1, 0, 1, 1) / 18 / 4, 4 / 2446 */ 4, EO, ER, EM, EK, 4, ER, EU, EK, EQ,
    /* (0, 1, 1, 1, 1, 0, 1, 1) / -18 / 4, 4 / 2456 */ 4, EL, EN, EU, ER, 4, EJ, EL, EO, EU,
    /* (1, 1, 0, 1, 0, 1, 1, 1) / 18 / 4, 4 / 2466 */ 4, ET, ER, EP, EK, 4, ER, EN, EK, EL,
    /* (1, 0, 1, 1, 0, 1, 1, 1) / -18 / 4, 4 / 2476 */ 4, ET, ER, EM, EO, 4, EN, ET, EJ, EM,
    /* (0, 1, 1, 0, 1, 1, 1, 1) / 18 / 4, 4 / 2486 */ 4, EM, EQ, EJ, EN, 4, EQ, EK, EN, EL,
    /* (1, 0, 0, 1, 1, 1, 1, 1) / -18 / 4, 4 / 2496 */ 4, EP, EL, EO, EJ, 4, EK, EP, EM, EO,
  };


  const short table_cube3d_mc33_offsets[] = {
    /* (0, 0, 0, 0, 0, 0, 0, 0) / 0 */ 255,
    /* (1, 0, 0, 0, 0, 0, 0, 0) / 1 */ 255,
    /* (0, 1, 0, 0, 0, 0, 0, 0) / 2 */ 255,
    /* (1, 1, 0, 0, 0, 0, 0, 0) / 3 */ 255,
    /* (0, 0, 1, 0, 0, 0, 0, 0) / 4 */ 255,
    /* (1, 0, 1, 0, 0, 0, 0, 0) / 5 */ 255,
    /* (0, 1, 1, 0, 0, 0, 0, 0) / 6 */ 0,
    /* (1, 1, 1, 0, 0, 0, 0, 0) / 7 */ 255,
    /* (0, 0, 0, 1, 0, 0, 0, 0) / 8 */ 255,
    /* (1, 0, 0, 1, 0, 0, 0, 0) / 9 */ 3,
    /* (0, 1, 0, 1, 0, 0, 0, 0) / 10 */ 255,
    /* (1, 1, 0, 1, 0, 0, 0, 0) / 11 */ 255,
    /* (0, 0, 1, 1, 0, 0, 0, 0) / 12 */ 255,
    /* (1, 0, 1, 1, 0, 0, 0, 0) / 13 */ 255,
    /* (0, 1, 1, 1, 0, 0, 0, 0) / 14 */ 255,
    /* (1, 1, 1, 1, 0, 0, 0, 0) / 15 */ 255,
    /* (0, 0, 0, 0, 1, 0, 0, 0) / 16 */ 255,
    /* (1, 0, 0, 0, 1, 0, 0, 0) / 17 */ 255,
    /* (0, 1, 0, 0, 1, 0, 0, 0) / 18 */ 6,
    /* (1, 1, 0, 0, 1, 0, 0, 0) / 19 */ 255,
    /* (0, 0, 1, 0, 1, 0, 0, 0) / 20 */ 9,
    /* (1, 0, 1, 0, 1, 0, 0, 0) / 21 */ 255,
    /* (0, 1, 1, 0, 1, 0, 0, 0) / 22 */ 255,
    /* (1, 1, 1, 0, 1, 0, 0, 0) / 23 */ 255,
    /* (0, 0, 0, 1, 1, 0, 0, 0) / 24 */ 255,
    /* (1, 0, 0, 1, 1, 0, 0, 0) / 25 */ 255,
    /* (0, 1, 0, 1, 1, 0, 0, 0) / 26 */ 255,
    /* (1, 1, 0, 1, 1, 0, 0, 0) / 27 */ 255,
    /* (0, 0, 1, 1, 1, 0, 0, 0) / 28 */ 255,
    /* (1, 0, 1, 1, 1, 0, 0, 0) / 29 */ 255,
    /* (0, 1, 1, 1, 1, 0, 0, 0) / 30 */ 255,
    /* (1, 1, 1, 1, 1, 0, 0, 0) / 31 */ 255,
    /* (0, 0, 0, 0, 0, 1, 0, 0) / 32 */ 255,
    /* (1, 0, 0, 0, 0, 1, 0, 0) / 33 */ 12,
    /* (0, 1, 0, 0, 0, 1, 0, 0) / 34 */ 255,
    /* (1, 1, 0, 0, 0, 1, 0, 0) / 35 */ 255,
    /* (0, 0, 1, 0, 0, 1, 0, 0) / 36 */ 255,
    /* (1, 0, 1, 0, 0, 1, 0, 0) / 37 */ 255,
    /* (0, 1, 1, 0, 0, 1, 0, 0) / 38 */ 255,
    /* (1, 1, 1, 0, 0, 1, 0, 0) / 39 */ 255,
    /* (0, 0, 0, 1, 0, 1, 0, 0) / 40 */ 15,
    /* (1, 0, 0, 1, 0, 1, 0, 0) / 41 */ 255,
    /* (0, 1, 0, 1, 0, 1, 0, 0) / 42 */ 255,
    /* (1, 1, 0, 1, 0, 1, 0, 0) / 43 */ 255,
    /* (0, 0, 1, 1, 0, 1, 0, 0) / 44 */ 255,
    /* (1, 0, 1, 1, 0, 1, 0, 0) / 45 */ 255,
    /* (0, 1, 1, 1, 0, 1, 0, 0) / 46 */ 255,
    /* (1, 1, 1, 1, 0, 1, 0, 0) / 47 */ 255,
    /* (0, 0, 0, 0, 1, 1, 0, 0) / 48 */ 255,
    /* (1, 0, 0, 0, 1, 1, 0, 0) / 49 */ 255,
    /* (0, 1, 0, 0, 1, 1, 0, 0) / 50 */ 255,
    /* (1, 1, 0, 0, 1, 1, 0, 0) / 51 */ 255,
    /* (0, 0, 1, 0, 1, 1, 0, 0) / 52 */ 255,
    /* (1, 0, 1, 0, 1, 1, 0, 0) / 53 */ 255,
    /* (0, 1, 1, 0, 1, 1, 0, 0) / 54 */ 255,
    /* (1, 1, 1, 0, 1, 1, 0, 0) / 55 */ 255,
    /* (0, 0, 0, 1, 1, 1, 0, 0) / 56 */ 255,
    /* (1, 0, 0, 1, 1, 1, 0, 0) / 57 */ 255,
    /* (0, 1, 0, 1, 1, 1, 0, 0) / 58 */ 255,
    /* (1, 1, 0, 1, 1, 1, 0, 0) / 59 */ 255,
    /* (0, 0, 1, 1, 1, 1, 0, 0) / 60 */ 255,
    /* (1, 0, 1, 1, 1, 1, 0, 0) / 61 */ 255,
    /* (0, 1, 1, 1, 1, 1, 0, 0) / 62 */ 255,
    /* (1, 1, 1, 1, 1, 1, 0, 0) / 63 */ 255,
    /* (0, 0, 0, 0, 0, 0, 1, 0) / 64 */ 255,
    /* (1, 0, 0, 0, 0, 0, 1, 0) / 65 */ 18,
    /* (0, 1, 0, 0, 0, 0, 1, 0) / 66 */ 255,
    /* (1, 1, 0, 0, 0, 0, 1, 0) / 67 */ 255,
    /* (0, 0, 1, 0, 0, 0, 1, 0) / 68 */ 255,
    /* (1, 0, 1, 0, 0, 0, 1, 0) / 69 */ 255,
    /* (0, 1, 1, 0, 0, 0, 1, 0) / 70 */ 255,
    /* (1, 1, 1, 0, 0, 0, 1, 0) / 71 */ 255,
    /* (0, 0, 0, 1, 0, 0, 1, 0) / 72 */ 21,
    /* (1, 0, 0, 1, 0, 0, 1, 0) / 73 */ 255,
    /* (0, 1, 0, 1, 0, 0, 1, 0) / 74 */ 255,
    /* (1, 1, 0, 1, 0, 0, 1, 0) / 75 */ 255,
    /* (0, 0, 1, 1, 0, 0, 1, 0) / 76 */ 255,
    /* (1, 0, 1, 1, 0, 0, 1, 0) / 77 */ 255,
    /* (0, 1, 1, 1, 0, 0, 1, 0) / 78 */ 255,
    /* (1, 1, 1, 1, 0, 0, 1, 0) / 79 */ 255,
    /* (0, 0, 0, 0, 1, 0, 1, 0) / 80 */ 255,
    /* (1, 0, 0, 0, 1, 0, 1, 0) / 81 */ 255,
    /* (0, 1, 0, 0, 1, 0, 1, 0) / 82 */ 255,
    /* (1, 1, 0, 0, 1, 0, 1, 0) / 83 */ 255,
    /* (0, 0, 1, 0, 1, 0, 1, 0) / 84 */ 255,
    /* (1, 0, 1, 0, 1, 0, 1, 0) / 85 */ 255,
    /* (0, 1, 1, 0, 1, 0, 1, 0) / 86 */ 255,
    /* (1, 1, 1, 0, 1, 0, 1, 0) / 87 */ 255,
    /* (0, 0, 0, 1, 1, 0, 1, 0) / 88 */ 255,
    /* (1, 0, 0, 1, 1, 0, 1, 0) / 89 */ 255,
    /* (0, 1, 0, 1, 1, 0, 1, 0) / 90 */ 255,
    /* (1, 1, 0, 1, 1, 0, 1, 0) / 91 */ 255,
    /* (0, 0, 1, 1, 1, 0, 1, 0) / 92 */ 255,
    /* (1, 0, 1, 1, 1, 0, 1, 0) / 93 */ 255,
    /* (0, 1, 1, 1, 1, 0, 1, 0) / 94 */ 255,
    /* (1, 1, 1, 1, 1, 0, 1, 0) / 95 */ 255,
    /* (0, 0, 0, 0, 0, 1, 1, 0) / 96 */ 24,
    /* (1, 0, 0, 0, 0, 1, 1, 0) / 97 */ 255,
    /* (0, 1, 0, 0, 0, 1, 1, 0) / 98 */ 255,
    /* (1, 1, 0, 0, 0, 1, 1, 0) / 99 */ 255,
    /* (0, 0, 1, 0, 0, 1, 1, 0) / 100 */ 255,
    /* (1, 0, 1, 0, 0, 1, 1, 0) / 101 */ 255,
    /* (0, 1, 1, 0, 0, 1, 1, 0) / 102 */ 255,
    /* (1, 1, 1, 0, 0, 1, 1, 0) / 103 */ 255,
    /* (0, 0, 0, 1, 0, 1, 1, 0) / 104 */ 255,
    /* (1, 0, 0, 1, 0, 1, 1, 0) / 105 */ 255,
    /* (0, 1, 0, 1, 0, 1, 1, 0) / 106 */ 255,
    /* (1, 1, 0, 1, 0, 1, 1, 0) / 107 */ 255,
    /* (0, 0, 1, 1, 0, 1, 1, 0) / 108 */ 255,
    /* (1, 0, 1, 1, 0, 1, 1, 0) / 109 */ 255,
    /* (0, 1, 1, 1, 0, 1, 1, 0) / 110 */ 255,
    /* (1, 1, 1, 1, 0, 1, 1, 0) / 111 */ 27,
    /* (0, 0, 0, 0, 1, 1, 1, 0) / 112 */ 255,
    /* (1, 0, 0, 0, 1, 1, 1, 0) / 113 */ 255,
    /* (0, 1, 0, 0, 1, 1, 1, 0) / 114 */ 255,
    /* (1, 1, 0, 0, 1, 1, 1, 0) / 115 */ 255,
    /* (0, 0, 1, 0, 1, 1, 1, 0) / 116 */ 255,
    /* (1, 0, 1, 0, 1, 1, 1, 0) / 117 */ 255,
    /* (0, 1, 1, 0, 1, 1, 1, 0) / 118 */ 255,
    /* (1, 1, 1, 0, 1, 1, 1, 0) / 119 */ 255,
    /* (0, 0, 0, 1, 1, 1, 1, 0) / 120 */ 255,
    /* (1, 0, 0, 1, 1, 1, 1, 0) / 121 */ 255,
    /* (0, 1, 0, 1, 1, 1, 1, 0) / 122 */ 255,
    /* (1, 1, 0, 1, 1, 1, 1, 0) / 123 */ 30,
    /* (0, 0, 1, 1, 1, 1, 1, 0) / 124 */ 255,
    /* (1, 0, 1, 1, 1, 1, 1, 0) / 125 */ 33,
    /* (0, 1, 1, 1, 1, 1, 1, 0) / 126 */ 255,
    /* (1, 1, 1, 1, 1, 1, 1, 0) / 127 */ 255,
    /* (0, 0, 0, 0, 0, 0, 0, 1) / 128 */ 255,
    /* (1, 0, 0, 0, 0, 0, 0, 1) / 129 */ 255,
    /* (0, 1, 0, 0, 0, 0, 0, 1) / 130 */ 36,
    /* (1, 1, 0, 0, 0, 0, 0, 1) / 131 */ 255,
    /* (0, 0, 1, 0, 0, 0, 0, 1) / 132 */ 39,
    /* (1, 0, 1, 0, 0, 0, 0, 1) / 133 */ 255,
    /* (0, 1, 1, 0, 0, 0, 0, 1) / 134 */ 255,
    /* (1, 1, 1, 0, 0, 0, 0, 1) / 135 */ 255,
    /* (0, 0, 0, 1, 0, 0, 0, 1) / 136 */ 255,
    /* (1, 0, 0, 1, 0, 0, 0, 1) / 137 */ 255,
    /* (0, 1, 0, 1, 0, 0, 0, 1) / 138 */ 255,
    /* (1, 1, 0, 1, 0, 0, 0, 1) / 139 */ 255,
    /* (0, 0, 1, 1, 0, 0, 0, 1) / 140 */ 255,
    /* (1, 0, 1, 1, 0, 0, 0, 1) / 141 */ 255,
    /* (0, 1, 1, 1, 0, 0, 0, 1) / 142 */ 255,
    /* (1, 1, 1, 1, 0, 0, 0, 1) / 143 */ 255,
    /* (0, 0, 0, 0, 1, 0, 0, 1) / 144 */ 42,
    /* (1, 0, 0, 0, 1, 0, 0, 1) / 145 */ 255,
    /* (0, 1, 0, 0, 1, 0, 0, 1) / 146 */ 255,
    /* (1, 1, 0, 0, 1, 0, 0, 1) / 147 */ 255,
    /* (0, 0, 1, 0, 1, 0, 0, 1) / 148 */ 255,
    /* (1, 0, 1, 0, 1, 0, 0, 1) / 149 */ 255,
    /* (0, 1, 1, 0, 1, 0, 0, 1) / 150 */ 255,
    /* (1, 1, 1, 0, 1, 0, 0, 1) / 151 */ 255,
    /* (0, 0, 0, 1, 1, 0, 0, 1) / 152 */ 255,
    /* (1, 0, 0, 1, 1, 0, 0, 1) / 153 */ 255,
    /* (0, 1, 0, 1, 1, 0, 0, 1) / 154 */ 255,
    /* (1, 1, 0, 1, 1, 0, 0, 1) / 155 */ 255,
    /* (0, 0, 1, 1, 1, 0, 0, 1) / 156 */ 255,
    /* (1, 0, 1, 1, 1, 0, 0, 1) / 157 */ 255,
    /* (0, 1, 1, 1, 1, 0, 0, 1) / 158 */ 255,
    /* (1, 1, 1, 1, 1, 0, 0, 1) / 159 */ 45,
    /* (0, 0, 0, 0, 0, 1, 0, 1) / 160 */ 255,
    /* (1, 0, 0, 0, 0, 1, 0, 1) / 161 */ 255,
    /* (0, 1, 0, 0, 0, 1, 0, 1) / 162 */ 255,
    /* (1, 1, 0, 0, 0, 1, 0, 1) / 163 */ 255,
    /* (0, 0, 1, 0, 0, 1, 0, 1) / 164 */ 255,
    /* (1, 0, 1, 0, 0, 1, 0, 1) / 165 */ 255,
    /* (0, 1, 1, 0, 0, 1, 0, 1) / 166 */ 255,
    /* (1, 1, 1, 0, 0, 1, 0, 1) / 167 */ 255,
    /* (0, 0, 0, 1, 0, 1, 0, 1) / 168 */ 255,
    /* (1, 0, 0, 1, 0, 1, 0, 1) / 169 */ 255,
    /* (0, 1, 0, 1, 0, 1, 0, 1) / 170 */ 255,
    /* (1, 1, 0, 1, 0, 1, 0, 1) / 171 */ 255,
    /* (0, 0, 1, 1, 0, 1, 0, 1) / 172 */ 255,
    /* (1, 0, 1, 1, 0, 1, 0, 1) / 173 */ 255,
    /* (0, 1, 1, 1, 0, 1, 0, 1) / 174 */ 255,
    /* (1, 1, 1, 1, 0, 1, 0, 1) / 175 */ 255,
    /* (0, 0, 0, 0, 1, 1, 0, 1) / 176 */ 255,
    /* (1, 0, 0, 0, 1, 1, 0, 1) / 177 */ 255,
    /* (0, 1, 0, 0, 1, 1, 0, 1) / 178 */ 255,
    /* (1, 1, 0, 0, 1, 1, 0, 1) / 179 */ 255,
    /* (0, 0, 1, 0, 1, 1, 0, 1) / 180 */ 255,
    /* (1, 0, 1, 0, 1, 1, 0, 1) / 181 */ 255,
    /* (0, 1, 1, 0, 1, 1, 0, 1) / 182 */ 255,
    /* (1, 1, 1, 0, 1, 1, 0, 1) / 183 */ 48,
    /* (0, 0, 0, 1, 1, 1, 0, 1) / 184 */ 255,
    /* (1, 0, 0, 1, 1, 1, 0, 1) / 185 */ 255,
    /* (0, 1, 0, 1, 1, 1, 0, 1) / 186 */ 255,
    /* (1, 1, 0, 1, 1, 1, 0, 1) / 187 */ 255,
    /* (0, 0, 1, 1, 1, 1, 0, 1) / 188 */ 255,
    /* (1, 0, 1, 1, 1, 1, 0, 1) / 189 */ 255,
    /* (0, 1, 1, 1, 1, 1, 0, 1) / 190 */ 51,
    /* (1, 1, 1, 1, 1, 1, 0, 1) / 191 */ 255,
    /* (0, 0, 0, 0, 0, 0, 1, 1) / 192 */ 255,
    /* (1, 0, 0, 0, 0, 0, 1, 1) / 193 */ 255,
    /* (0, 1, 0, 0, 0, 0, 1, 1) / 194 */ 255,
    /* (1, 1, 0, 0, 0, 0, 1, 1) / 195 */ 255,
    /* (0, 0, 1, 0, 0, 0, 1, 1) / 196 */ 255,
    /* (1, 0, 1, 0, 0, 0, 1, 1) / 197 */ 255,
    /* (0, 1, 1, 0, 0, 0, 1, 1) / 198 */ 255,
    /* (1, 1, 1, 0, 0, 0, 1, 1) / 199 */ 255,
    /* (0, 0, 0, 1, 0, 0, 1, 1) / 200 */ 255,
    /* (1, 0, 0, 1, 0, 0, 1, 1) / 201 */ 255,
    /* (0, 1, 0, 1, 0, 0, 1, 1) / 202 */ 255,
    /* (1, 1, 0, 1, 0, 0, 1, 1) / 203 */ 255,
    /* (0, 0, 1, 1, 0, 0, 1, 1) / 204 */ 255,
    /* (1, 0, 1, 1, 0, 0, 1, 1) / 205 */ 255,
    /* (0, 1, 1, 1, 0, 0, 1, 1) / 206 */ 255,
    /* (1, 1, 1, 1, 0, 0, 1, 1) / 207 */ 255,
    /* (0, 0, 0, 0, 1, 0, 1, 1) / 208 */ 255,
    /* (1, 0, 0, 0, 1, 0, 1, 1) / 209 */ 255,
    /* (0, 1, 0, 0, 1, 0, 1, 1) / 210 */ 255,
    /* (1, 1, 0, 0, 1, 0, 1, 1) / 211 */ 255,
    /* (0, 0, 1, 0, 1, 0, 1, 1) / 212 */ 255,
    /* (1, 0, 1, 0, 1, 0, 1, 1) / 213 */ 255,
    /* (0, 1, 1, 0, 1, 0, 1, 1) / 214 */ 255,
    /* (1, 1, 1, 0, 1, 0, 1, 1) / 215 */ 54,
    /* (0, 0, 0, 1, 1, 0, 1, 1) / 216 */ 255,
    /* (1, 0, 0, 1, 1, 0, 1, 1) / 217 */ 255,
    /* (0, 1, 0, 1, 1, 0, 1, 1) / 218 */ 255,
    /* (1, 1, 0, 1, 1, 0, 1, 1) / 219 */ 255,
    /* (0, 0, 1, 1, 1, 0, 1, 1) / 220 */ 255,
    /* (1, 0, 1, 1, 1, 0, 1, 1) / 221 */ 255,
    /* (0, 1, 1, 1, 1, 0, 1, 1) / 222 */ 57,
    /* (1, 1, 1, 1, 1, 0, 1, 1) / 223 */ 255,
    /* (0, 0, 0, 0, 0, 1, 1, 1) / 224 */ 255,
    /* (1, 0, 0, 0, 0, 1, 1, 1) / 225 */ 255,
    /* (0, 1, 0, 0, 0, 1, 1, 1) / 226 */ 255,
    /* (1, 1, 0, 0, 0, 1, 1, 1) / 227 */ 255,
    /* (0, 0, 1, 0, 0, 1, 1, 1) / 228 */ 255,
    /* (1, 0, 1, 0, 0, 1, 1, 1) / 229 */ 255,
    /* (0, 1, 1, 0, 0, 1, 1, 1) / 230 */ 255,
    /* (1, 1, 1, 0, 0, 1, 1, 1) / 231 */ 255,
    /* (0, 0, 0, 1, 0, 1, 1, 1) / 232 */ 255,
    /* (1, 0, 0, 1, 0, 1, 1, 1) / 233 */ 255,
    /* (0, 1, 0, 1, 0, 1, 1, 1) / 234 */ 255,
    /* (1, 1, 0, 1, 0, 1, 1, 1) / 235 */ 60,
    /* (0, 0, 1, 1, 0, 1, 1, 1) / 236 */ 255,
    /* (1, 0, 1, 1, 0, 1, 1, 1) / 237 */ 63,
    /* (0, 1, 1, 1, 0, 1, 1, 1) / 238 */ 255,
    /* (1, 1, 1, 1, 0, 1, 1, 1) / 239 */ 255,
    /* (0, 0, 0, 0, 1, 1, 1, 1) / 240 */ 255,
    /* (1, 0, 0, 0, 1, 1, 1, 1) / 241 */ 255,
    /* (0, 1, 0, 0, 1, 1, 1, 1) / 242 */ 255,
    /* (1, 1, 0, 0, 1, 1, 1, 1) / 243 */ 255,
    /* (0, 0, 1, 0, 1, 1, 1, 1) / 244 */ 255,
    /* (1, 0, 1, 0, 1, 1, 1, 1) / 245 */ 255,
    /* (0, 1, 1, 0, 1, 1, 1, 1) / 246 */ 66,
    /* (1, 1, 1, 0, 1, 1, 1, 1) / 247 */ 255,
    /* (0, 0, 0, 1, 1, 1, 1, 1) / 248 */ 255,
    /* (1, 0, 0, 1, 1, 1, 1, 1) / 249 */ 69,
    /* (0, 1, 0, 1, 1, 1, 1, 1) / 250 */ 255,
    /* (1, 1, 0, 1, 1, 1, 1, 1) / 251 */ 255,
    /* (0, 0, 1, 1, 1, 1, 1, 1) / 252 */ 255,
    /* (1, 0, 1, 1, 1, 1, 1, 1) / 253 */ 255,
    /* (0, 1, 1, 1, 1, 1, 1, 1) / 254 */ 255,
    /* (1, 1, 1, 1, 1, 1, 1, 1) / 255 */ 255,
  };


  const short table_cube3d_mc33_face_test_order[] = {
    /* dummy entry/not used but the index has to start with 1*/
    1,

    TEST_FACE_4,
    CASE_IS_REGULAR, 256,

    TEST_FACE_4,
    CASE_IS_REGULAR, 257,

    TEST_FACE_2,
    CASE_IS_REGULAR, 258,

    TEST_FACE_0,
    CASE_IS_REGULAR, 259,

    TEST_FACE_2,
    CASE_IS_REGULAR, 260,

    TEST_FACE_1,
    CASE_IS_REGULAR, 261,

    TEST_FACE_0,
    CASE_IS_REGULAR, 262,

    TEST_FACE_3,
    CASE_IS_REGULAR, 263,

    TEST_FACE_5,
    CASE_IS_REGULAR, 264,

    TEST_FACE_5,
    CASE_IS_REGULAR, 265,

    TEST_FACE_3,
    CASE_IS_REGULAR, 266,

    TEST_FACE_1,
    CASE_IS_REGULAR, 267,

    TEST_FACE_1,
    CASE_IS_REGULAR, 268,

    TEST_FACE_3,
    CASE_IS_REGULAR, 269,

    TEST_FACE_5,
    CASE_IS_REGULAR, 270,

    TEST_FACE_5,
    CASE_IS_REGULAR, 271,

    TEST_FACE_3,
    CASE_IS_REGULAR, 272,

    TEST_FACE_0,
    CASE_IS_REGULAR, 273,

    TEST_FACE_1,
    CASE_IS_REGULAR, 274,

    TEST_FACE_2,
    CASE_IS_REGULAR, 275,

    TEST_FACE_0,
    CASE_IS_REGULAR, 276,

    TEST_FACE_2,
    CASE_IS_REGULAR, 277,

    TEST_FACE_4,
    CASE_IS_REGULAR, 278,

    TEST_FACE_4,
    CASE_IS_REGULAR, 279,

  };


  const short table_simplex3d_cases_offsets[][5] = {
    /* vv: vertex values with 0=in, 1=out
     * cn: case number
     * bc: basic case, if negative it's inverted
     * c1: element count of co-dimension 1 elements
     * o1: table offset for co-dimension 1
     * c0: element count of co-dimension 0 elements
     * o0: table offset for co-dimension 0
     * uniq: whether the case is ambiguous for MC33 */
    /* vv / cn / bc / c0, o0, c1, o1, uniq */
    /* (0, 0, 0, 0) / 0 */ {0, 1, 0, 0, 0},
    /* (1, 0, 0, 0) / 1 */ {5, 1, 0, 1, 0},
    /* (0, 1, 0, 0) / 1 */ {12, 1, 4, 1, 0},
    /* (1, 1, 0, 0) / 2 */ {19, 1, 8, 1, 0},
    /* (0, 0, 1, 0) / 1 */ {26, 1, 13, 1, 0},
    /* (1, 0, 1, 0) / 2 */ {33, 1, 17, 1, 0},
    /* (0, 1, 1, 0) / 2 */ {40, 1, 22, 1, 0},
    /* (1, 1, 1, 0) / 3 */ {47, 1, 27, 1, 0},
    /* (0, 0, 0, 1) / 1 */ {52, 1, 31, 1, 0},
    /* (1, 0, 0, 1) / 2 */ {59, 1, 35, 1, 0},
    /* (0, 1, 0, 1) / 2 */ {66, 1, 40, 1, 0},
    /* (1, 1, 0, 1) / 3 */ {73, 1, 45, 1, 0},
    /* (0, 0, 1, 1) / 2 */ {78, 1, 49, 1, 0},
    /* (1, 0, 1, 1) / 3 */ {85, 1, 54, 1, 0},
    /* (0, 1, 1, 1) / 3 */ {90, 1, 58, 1, 0},
    /* (1, 1, 1, 1) / 4 */ {95, 0, 62, 0, 0},
  };


  const short table_simplex3d_codim_0[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0, 0) / 0 / 4 / 0 */ 4, VA, VB, VC, VE,
    /* (1, 0, 0, 0) / 1 / 6 / 5 */ 6, EJ, EL, EN, VB, VC, VE,
    /* (0, 1, 0, 0) / 1 / 6 / 12 */ 6, EJ, EW, EV, VA, VE, VC,
    /* (1, 1, 0, 0) / 2 / 6 / 19 */ 6, EL, EV, VC, EN, EW, VE,
    /* (0, 0, 1, 0) / 1 / 6 / 26 */ 6, EL, EV, EX, VA, VB, VE,
    /* (1, 0, 1, 0) / 2 / 6 / 33 */ 6, EV, EJ, VB, EX, EN, VE,
    /* (0, 1, 1, 0) / 2 / 6 / 40 */ 6, EJ, EL, VA, EW, EX, VE,
    /* (1, 1, 1, 0) / 3 / 4 / 47 */ 4, EN, EW, EX, VE,
    /* (0, 0, 0, 1) / 1 / 6 / 52 */ 6, EN, EX, EW, VA, VC, VB,
    /* (1, 0, 0, 1) / 2 / 6 / 59 */ 6, EX, EL, VC, EW, EJ, VB,
    /* (0, 1, 0, 1) / 2 / 6 / 66 */ 6, EV, EX, VC, EJ, EN, VA,
    /* (1, 1, 0, 1) / 3 / 4 / 73 */ 4, EV, EL, EX, VC,
    /* (0, 0, 1, 1) / 2 / 6 / 78 */ 6, EW, EV, VB, EN, EL, VA,
    /* (1, 0, 1, 1) / 3 / 4 / 85 */ 4, EW, EJ, EV, VB,
    /* (0, 1, 1, 1) / 3 / 4 / 90 */ 4, EN, EL, EJ, VA,
    /* (1, 1, 1, 1) / 4 /  / 95 */  /* no elements */
  };


  const short table_simplex3d_codim_1[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0, 0) / 0 /  / 0 */  /* no elements */
    /* (1, 0, 0, 0) / 1 / 3 / 0 */ 3, EL, EJ, EN,
    /* (0, 1, 0, 0) / 1 / 3 / 4 */ 3, EW, EJ, EV,
    /* (1, 1, 0, 0) / 2 / 4 / 8 */ 4, EL, EV, EN, EW,
    /* (0, 0, 1, 0) / 1 / 3 / 13 */ 3, EV, EL, EX,
    /* (1, 0, 1, 0) / 2 / 4 / 17 */ 4, EV, EJ, EX, EN,
    /* (0, 1, 1, 0) / 2 / 4 / 22 */ 4, EJ, EL, EW, EX,
    /* (1, 1, 1, 0) / 3 / 3 / 27 */ 3, EW, EN, EX,
    /* (0, 0, 0, 1) / 1 / 3 / 31 */ 3, EX, EN, EW,
    /* (1, 0, 0, 1) / 2 / 4 / 35 */ 4, EX, EL, EW, EJ,
    /* (0, 1, 0, 1) / 2 / 4 / 40 */ 4, EV, EX, EJ, EN,
    /* (1, 1, 0, 1) / 3 / 3 / 45 */ 3, EL, EV, EX,
    /* (0, 0, 1, 1) / 2 / 4 / 49 */ 4, EW, EV, EN, EL,
    /* (1, 0, 1, 1) / 3 / 3 / 54 */ 3, EJ, EW, EV,
    /* (0, 1, 1, 1) / 3 / 3 / 58 */ 3, EL, EN, EJ,
    /* (1, 1, 1, 1) / 4 /  / 62 */  /* no elements */
  };


  const short table_cube2d_cases_offsets[][5] = {
    /* vv: vertex values with 0=in, 1=out
     * cn: case number
     * bc: basic case, if negative it's inverted
     * c1: element count of co-dimension 1 elements
     * o1: table offset for co-dimension 1
     * c0: element count of co-dimension 0 elements
     * o0: table offset for co-dimension 0
     * uniq: whether the case is ambiguous for MC33 */
    /* vv / cn / bc / c0, o0, c1, o1, uniq */
    /* (0, 0, 0, 0) / 0 */ {0, 1, 0, 0, 0},
    /* (1, 0, 0, 0) / 1 */ {5, 2, 0, 1, 0},
    /* (0, 1, 0, 0) / 1 */ {14, 2, 3, 1, 0},
    /* (1, 1, 0, 0) / 2 */ {23, 1, 6, 1, 0},
    /* (0, 0, 1, 0) / 1 */ {28, 2, 9, 1, 0},
    /* (1, 0, 1, 0) / 2 */ {37, 1, 12, 1, 0},
    /* (0, 1, 1, 0) / 3 */ {42, 2, 15, 2, 1},
    /* (1, 1, 1, 0) / 4 */ {52, 1, 21, 1, 0},
    /* (0, 0, 0, 1) / 1 */ {56, 2, 24, 1, 0},
    /* (1, 0, 0, 1) / 3 */ {65, 2, 27, 2, 1},
    /* (0, 1, 0, 1) / 2 */ {75, 1, 33, 1, 0},
    /* (1, 1, 0, 1) / 4 */ {80, 1, 36, 1, 0},
    /* (0, 0, 1, 1) / 2 */ {84, 1, 39, 1, 0},
    /* (1, 0, 1, 1) / 4 */ {89, 1, 42, 1, 0},
    /* (0, 1, 1, 1) / 4 */ {93, 1, 45, 1, 0},
    /* (1, 1, 1, 1) / 5 */ {97, 0, 48, 0, 0},
    /* MC 33 cases follow */
    /* 3 test index:3 */ {97, 2, 48, 2, 0},
    /* 3 test index:3 */ {105, 2, 54, 2, 0},
  };


  const short table_cube2d_codim_0[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0, 0) / 0 / 4 / 0 */ 4, VA, VB, VC, VD,
    /* (1, 0, 0, 0) / 1 / 3, 4 / 5 */ 3, VB, VC, VD, 4, VB, EJ, EL, VC,
    /* (0, 1, 0, 0) / 1 / 3, 4 / 14 */ 3, VD, VA, VC, 4, VD, EM, EJ, VA,
    /* (1, 1, 0, 0) / 2 / 4 / 23 */ 4, EL, EM, VC, VD,
    /* (0, 0, 1, 0) / 1 / 3, 4 / 28 */ 3, VA, VD, VB, 4, VA, EL, EK, VD,
    /* (1, 0, 1, 0) / 2 / 4 / 37 */ 4, EK, EJ, VD, VB,
    /* (0, 1, 1, 0) / 3 / 4, 4 / 42 */ 4, VA, VD, EL, EK, 4, EJ, EM, VA, VD,
    /* (1, 1, 1, 0) / 4 / 3 / 52 */ 3, VD, EK, EM,
    /* (0, 0, 0, 1) / 1 / 3, 4 / 56 */ 3, VC, VB, VA, 4, VC, EK, EM, VB,
    /* (1, 0, 0, 1) / 3 / 4, 4 / 65 */ 4, VB, VC, EJ, EL, 4, EM, EK, VB, VC,
    /* (0, 1, 0, 1) / 2 / 4 / 75 */ 4, EJ, EK, VA, VC,
    /* (1, 1, 0, 1) / 4 / 3 / 80 */ 3, VC, EL, EK,
    /* (0, 0, 1, 1) / 2 / 4 / 84 */ 4, EM, EL, VB, VA,
    /* (1, 0, 1, 1) / 4 / 3 / 89 */ 3, VB, EM, EJ,
    /* (0, 1, 1, 1) / 4 / 3 / 93 */ 3, VA, EJ, EL,
    /* (1, 1, 1, 1) / 5 /  / 97 */  /* no elements */
    /* (0, 1, 1, 0) / 3 / 3, 3 / 97 */ 3, VC, EK, EL, 3, VB, EM, EJ,
    /* (1, 0, 0, 1) / 3 / 3, 3 / 105 */ 3, VA, EL, EJ, 3, VD, EK, EM,
  };


  const short table_cube2d_codim_1[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0, 0) / 0 /  / 0 */  /* no elements */
    /* (1, 0, 0, 0) / 1 / 2 / 0 */ 2, EJ, EL,
    /* (0, 1, 0, 0) / 1 / 2 / 3 */ 2, EM, EJ,
    /* (1, 1, 0, 0) / 2 / 2 / 6 */ 2, EM, EL,
    /* (0, 0, 1, 0) / 1 / 2 / 9 */ 2, EL, EK,
    /* (1, 0, 1, 0) / 2 / 2 / 12 */ 2, EJ, EK,
    /* (0, 1, 1, 0) / 3 / 2, 2 / 15 */ 2, EJ, EM, 2, EL, EK,
    /* (1, 1, 1, 0) / 4 / 2 / 21 */ 2, EK, EM,
    /* (0, 0, 0, 1) / 1 / 2 / 24 */ 2, EK, EM,
    /* (1, 0, 0, 1) / 3 / 2, 2 / 27 */ 2, EM, EK, 2, EJ, EL,
    /* (0, 1, 0, 1) / 2 / 2 / 33 */ 2, EK, EJ,
    /* (1, 1, 0, 1) / 4 / 2 / 36 */ 2, EL, EK,
    /* (0, 0, 1, 1) / 2 / 2 / 39 */ 2, EL, EM,
    /* (1, 0, 1, 1) / 4 / 2 / 42 */ 2, EM, EJ,
    /* (0, 1, 1, 1) / 4 / 2 / 45 */ 2, EJ, EL,
    /* (1, 1, 1, 1) / 5 /  / 48 */  /* no elements */
    /* (0, 1, 1, 0) / 3 / 2, 2 / 48 */ 2, EM, EJ, 2, EK, EL,
    /* (1, 0, 0, 1) / 3 / 2, 2 / 54 */ 2, EK, EM, 2, EL, EJ,
  };


  const short table_cube2d_mc33_offsets[] = {
    /* (0, 0, 0, 0) / 0 */ 255,
    /* (1, 0, 0, 0) / 1 */ 255,
    /* (0, 1, 0, 0) / 2 */ 255,
    /* (1, 1, 0, 0) / 3 */ 255,
    /* (0, 0, 1, 0) / 4 */ 255,
    /* (1, 0, 1, 0) / 5 */ 255,
    /* (0, 1, 1, 0) / 6 */ 0,
    /* (1, 1, 1, 0) / 7 */ 255,
    /* (0, 0, 0, 1) / 8 */ 255,
    /* (1, 0, 0, 1) / 9 */ 3,
    /* (0, 1, 0, 1) / 10 */ 255,
    /* (1, 1, 0, 1) / 11 */ 255,
    /* (0, 0, 1, 1) / 12 */ 255,
    /* (1, 0, 1, 1) / 13 */ 255,
    /* (0, 1, 1, 1) / 14 */ 255,
    /* (1, 1, 1, 1) / 15 */ 255,
  };


  const short table_cube2d_mc33_face_test_order[] = {
    /* dummy entry/not used but the index has to start with 1*/
    1,

    TEST_FACE_0,
    CASE_IS_REGULAR, 16,

    TEST_FACE_0,
    CASE_IS_REGULAR, 17,

  };


  const short table_simplex2d_cases_offsets[][5] = {
    /* vv: vertex values with 0=in, 1=out
     * cn: case number
     * bc: basic case, if negative it's inverted
     * c1: element count of co-dimension 1 elements
     * o1: table offset for co-dimension 1
     * c0: element count of co-dimension 0 elements
     * o0: table offset for co-dimension 0
     * uniq: whether the case is ambiguous for MC33 */
    /* vv / cn / bc / c0, o0, c1, o1, uniq */
    /* (0, 0, 0) / 0 */ {0, 1, 0, 0, 0},
    /* (1, 0, 0) / 1 */ {4, 1, 0, 1, 0},
    /* (0, 1, 0) / 1 */ {9, 1, 3, 1, 0},
    /* (1, 1, 0) / -1 */ {14, 1, 6, 1, 0},
    /* (0, 0, 1) / 1 */ {18, 1, 9, 1, 0},
    /* (1, 0, 1) / -1 */ {23, 1, 12, 1, 0},
    /* (0, 1, 1) / -1 */ {27, 1, 15, 1, 0},
    /* (1, 1, 1) / 16 */ {31, 0, 18, 0, 0},
  };


  const short table_simplex2d_codim_0[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0) / 0 / 3 / 0 */ 3, VA, VB, VC,
    /* (1, 0, 0) / 1 / 4 / 4 */ 4, EL, EJ, VC, VB,
    /* (0, 1, 0) / 1 / 4 / 9 */ 4, EJ, EV, VA, VC,
    /* (1, 1, 0) / -1 / 3 / 14 */ 3, EL, EV, VC,
    /* (0, 0, 1) / 1 / 4 / 18 */ 4, EV, EL, VB, VA,
    /* (1, 0, 1) / -1 / 3 / 23 */ 3, EV, EJ, VB,
    /* (0, 1, 1) / -1 / 3 / 27 */ 3, EJ, EL, VA,
    /* (1, 1, 1) / 16 /  / 31 */  /* no elements */
  };


  const short table_simplex2d_codim_1[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0, 0) / 0 /  / 0 */  /* no elements */
    /* (1, 0, 0) / 1 / 2 / 0 */ 2, EJ, EL,
    /* (0, 1, 0) / 1 / 2 / 3 */ 2, EV, EJ,
    /* (1, 1, 0) / -1 / 2 / 6 */ 2, EL, EV,
    /* (0, 0, 1) / 1 / 2 / 9 */ 2, EL, EV,
    /* (1, 0, 1) / -1 / 2 / 12 */ 2, EV, EJ,
    /* (0, 1, 1) / -1 / 2 / 15 */ 2, EJ, EL,
    /* (1, 1, 1) / 16 /  / 18 */  /* no elements */
  };


  const short table_any1d_cases_offsets[][5] = {
    /* vv: vertex values with 0=in, 1=out
     * cn: case number
     * bc: basic case, if negative it's inverted
     * c1: element count of co-dimension 1 elements
     * o1: table offset for co-dimension 1
     * c0: element count of co-dimension 0 elements
     * o0: table offset for co-dimension 0
     * uniq: whether the case is ambiguous for MC33 */
    /* vv / cn / bc / c0, o0, c1, o1, uniq */
    /* (0, 0) / 0 */ {0, 1, 0, 0, 0},
    /* (1, 0) / 1 */ {3, 1, 0, 1, 0},
    /* (0, 1) / 1 */ {6, 1, 2, 1, 0},
    /* (1, 1) / 16 */ {9, 0, 4, 0, 0},
  };


  const short table_any1d_codim_0[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0) / 0 / 2 / 0 */ 2, VA, VB,
    /* (1, 0) / 1 / 2 / 3 */ 2, EJ, VB,
    /* (0, 1) / 1 / 2 / 6 */ 2, EJ, VA,
    /* (1, 1) / 16 /  / 9 */  /* no elements */
  };


  const short table_any1d_codim_1[] = {
    /* cn: case number
     * bc: basic case, if negative it's inverted
     * el: elements specified by number of vertices
     * cp: current position in array = offset */
    /* cn / bc / el / cp */
    /* (0, 0) / 0 /  / 0 */  /* no elements */
    /* (1, 0) / 1 / 1 / 0 */ 1, EJ,
    /* (0, 1) / 1 / 1 / 2 */ 1, EJ,
    /* (1, 1) / 16 /  / 4 */  /* no elements */
  };


}
